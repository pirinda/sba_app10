/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DMyGridFilterSwitchTax.java
 *
 * Created on 4/09/2011, 11:56:10 PM
 */

package sba.gui.mygrid;

import javax.swing.JPanel;
import sba.lib.gui.DGuiClient;
import sba.lib.grid.DGridFilter;
import sba.lib.grid.DGridPaneView;

/**
 *
 * @author Sergio Flores
 */
public class DMyGridFilterSwitchTax extends JPanel implements DGridFilter {

    public static final String TAX_Y = "Con impuestos (click para ver s/impuestos)";
    public static final String TAX_N = "Sin impuestos (click para ver c/impuestos)";

    protected DGuiClient miClient;
    protected DGridPaneView moPaneView;

    /** Creates new form DMyGridFilterSwitchTax */
    public DMyGridFilterSwitchTax(DGuiClient client, DGridPaneView paneView) {
        miClient = client;
        moPaneView = paneView;
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtbSwitch = new javax.swing.JToggleButton();

        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jtbSwitch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sba/gui/img/swi_tax_off.gif"))); // NOI18N
        jtbSwitch.setPreferredSize(new java.awt.Dimension(23, 23));
        jtbSwitch.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/sba/gui/img/swi_tax_on.gif"))); // NOI18N
        jtbSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbSwitchActionPerformed(evt);
            }
        });
        add(jtbSwitch);
    }// </editor-fold>//GEN-END:initComponents

    private void jtbSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbSwitchActionPerformed
        updateToolTipText();
        moPaneView.putFilter(DMyGridConsts.FILTER_SWITCH_TAX, jtbSwitch.isSelected());
    }//GEN-LAST:event_jtbSwitchActionPerformed

    private void initComponentsCustom() {
        updateToolTipText();
    }

    private void updateToolTipText() {
        jtbSwitch.setToolTipText(jtbSwitch.isSelected() ? TAX_Y : TAX_N);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jtbSwitch;
    // End of variables declaration//GEN-END:variables

    /**
     * @param value Year as int[] of length 1 (year).
     */
    @Override
    public void initFilter(final Object value) {
        boolean selected = (Boolean) value;

        if (jtbSwitch.isSelected() != selected) {
            jtbSwitch.setSelected(selected);
        }

        updateToolTipText();
        moPaneView.getFiltersMap().put(DMyGridConsts.FILTER_SWITCH_TAX, selected);
    }
}
