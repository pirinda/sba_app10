/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DFormBizPartnerType.java
 *
 * Created on 29/08/2011, 08:02:13 PM
 */

package sba.mod.bpr.form;

import cfd.ver33.DCfdi33Catalogs;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import sba.gui.DGuiClientApp;
import sba.gui.cat.DXmlCatalog;
import sba.lib.DLibConsts;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiFieldKey;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanForm;
import sba.mod.DModConsts;
import sba.mod.DModSysConsts;
import sba.mod.bpr.db.DDbBizPartnerType;

/**
 *
 * @author Sergio Flores
 */
public class DFormBizPartnerType extends DBeanForm implements ItemListener {

    private DDbBizPartnerType moRegistry;
    private DXmlCatalog moXmlCatalogCfdUsage;

    /** Creates new form DFormBizPartnerType */
    public DFormBizPartnerType(DGuiClient client, int subtype, String title) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DModConsts.BU_BPR_TP, subtype, title);
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpContainer = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sba.lib.gui.bean.DBeanFieldText();
        jPanel3 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sba.lib.gui.bean.DBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlCreditType = new javax.swing.JLabel();
        moKeyCreditType = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel5 = new javax.swing.JPanel();
        jlCreditLimit = new javax.swing.JLabel();
        moCurCreditLimit = new sba.lib.gui.bean.DBeanCompoundFieldCurrency();
        jPanel6 = new javax.swing.JPanel();
        jlCreditDays = new javax.swing.JLabel();
        moIntCreditDays = new sba.lib.gui.bean.DBeanFieldInteger();
        jPanel7 = new javax.swing.JPanel();
        jlCreditDaysGrace = new javax.swing.JLabel();
        moIntCreditDaysGrace = new sba.lib.gui.bean.DBeanFieldInteger();
        jPanel8 = new javax.swing.JPanel();
        jlModeOfPaymentType = new javax.swing.JLabel();
        moKeyModeOfPaymentType = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel9 = new javax.swing.JPanel();
        jlCfdUsage = new javax.swing.JLabel();
        moKeyCfdUsage = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel11 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jlAbpBizPartner = new javax.swing.JLabel();
        moKeyAbpBizPartner = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel13 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jlCustomerType = new javax.swing.JLabel();
        moKeyCustomerType = new sba.lib.gui.bean.DBeanFieldKey();

        jpContainer.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jpContainer.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(12, 1, 0, 5));

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("Código:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel2.add(jlCode);

        moTextCode.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel2.add(moTextCode);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel3.add(moTextName);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCreditType.setText("Tipo crédito:*");
        jlCreditType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlCreditType);

        moKeyCreditType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        moKeyCreditType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel4.add(moKeyCreditType);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCreditLimit.setText("Límite crédito:*");
        jlCreditLimit.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlCreditLimit);
        jPanel5.add(moCurCreditLimit);

        jPanel1.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCreditDays.setText("Días crédito:*");
        jlCreditDays.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlCreditDays);

        moIntCreditDays.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel6.add(moIntCreditDays);

        jPanel1.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCreditDaysGrace.setText("Días gracia:");
        jlCreditDaysGrace.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlCreditDaysGrace);

        moIntCreditDaysGrace.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel7.add(moIntCreditDaysGrace);

        jPanel1.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlModeOfPaymentType.setText("Tipo forma pago:*");
        jlModeOfPaymentType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlModeOfPaymentType);

        moKeyModeOfPaymentType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        moKeyModeOfPaymentType.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel8.add(moKeyModeOfPaymentType);

        jPanel1.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCfdUsage.setText("Uso CFDI:*");
        jlCfdUsage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlCfdUsage);

        moKeyCfdUsage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        moKeyCfdUsage.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel9.add(moKeyCfdUsage);

        jPanel1.add(jPanel9);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel1.add(jPanel11);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlAbpBizPartner.setText("Paquete contable:*");
        jlAbpBizPartner.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlAbpBizPartner);

        moKeyAbpBizPartner.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        moKeyAbpBizPartner.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel10.add(moKeyAbpBizPartner);

        jPanel1.add(jPanel10);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel1.add(jPanel13);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCustomerType.setText("Tipo cliente mkt:*");
        jlCustomerType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlCustomerType);

        moKeyCustomerType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        moKeyCustomerType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel12.add(moKeyCustomerType);

        jPanel1.add(jPanel12);

        jpContainer.add(jPanel1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jpContainer, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 720, 450);
        
        moTextCode.setTextSettings(DGuiUtils.getLabelName(jlCode), 5);
        moTextName.setTextSettings(DGuiUtils.getLabelName(jlName), 50);
        moKeyCreditType.setKeySettings(miClient, DGuiUtils.getLabelName(jlCreditType), true);
        moCurCreditLimit.setCompoundFieldSettings(miClient);
        moCurCreditLimit.getField().setDecimalSettings(DGuiUtils.getLabelName(jlCreditLimit), DGuiConsts.GUI_TYPE_DEC_AMT, true);
        moIntCreditDays.setIntegerSettings(DGuiUtils.getLabelName(jlCreditDays), DGuiConsts.GUI_TYPE_INT, true);
        moIntCreditDaysGrace.setIntegerSettings(DGuiUtils.getLabelName(jlCreditDaysGrace), DGuiConsts.GUI_TYPE_INT, false);
        moKeyModeOfPaymentType.setKeySettings(miClient, DGuiUtils.getLabelName(jlModeOfPaymentType), true);
        moKeyCfdUsage.setKeySettings(miClient, DGuiUtils.getLabelName(jlCfdUsage), true);
        moKeyAbpBizPartner.setKeySettings(miClient, DGuiUtils.getLabelName(jlAbpBizPartner), true);
        moKeyCustomerType.setKeySettings(miClient, DGuiUtils.getLabelName(jlCustomerType), true);
        
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moKeyCreditType);
        moFields.addField(moCurCreditLimit.getField());
        moFields.addField(moIntCreditDays);
        moFields.addField(moIntCreditDaysGrace);
        moFields.addField(moKeyModeOfPaymentType);
        moFields.addField(moKeyCfdUsage);
        moFields.addField(moKeyAbpBizPartner);
        moFields.addField(moKeyCustomerType);
        
        moFields.setFormButton(jbSave);
        
        moXmlCatalogCfdUsage = ((DGuiClientApp) miClient).getXmlCatalogsMap().get(DCfdi33Catalogs.CAT_CFDI_USO);
        moXmlCatalogCfdUsage.populateCatalog(moKeyCfdUsage);
    }

    private void itemStateKeyCreditType() {
        if (moKeyCreditType.getSelectedIndex() <= 0) {
            moCurCreditLimit.getField().setEditable(false);
            moIntCreditDays.setEditable(false);
            moIntCreditDaysGrace.setEditable(false);

            moCurCreditLimit.getField().resetField();
            moIntCreditDays.resetField();
            moIntCreditDaysGrace.resetField();
        }
        else {
            switch (moKeyCreditType.getValue()[0]) {
                case DModSysConsts.BS_CDT_TP_CDT_NON:
                    moCurCreditLimit.getField().setEditable(false);
                    moIntCreditDays.setEditable(false);
                    moIntCreditDaysGrace.setEditable(false);

                    moCurCreditLimit.getField().resetField();
                    moIntCreditDays.resetField();
                    moIntCreditDaysGrace.resetField();
                    break;

                case DModSysConsts.BS_CDT_TP_CDT_LIM_YES:
                    moCurCreditLimit.getField().setEditable(true);
                    moIntCreditDays.setEditable(true);
                    moIntCreditDaysGrace.setEditable(true);
                    break;

                case DModSysConsts.BS_CDT_TP_CDT_LIM_NON:
                    moCurCreditLimit.getField().setEditable(false);
                    moIntCreditDays.setEditable(true);
                    moIntCreditDaysGrace.setEditable(true);

                    moCurCreditLimit.getField().resetField();
                    break;
                default:
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlAbpBizPartner;
    private javax.swing.JLabel jlCfdUsage;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlCreditDays;
    private javax.swing.JLabel jlCreditDaysGrace;
    private javax.swing.JLabel jlCreditLimit;
    private javax.swing.JLabel jlCreditType;
    private javax.swing.JLabel jlCustomerType;
    private javax.swing.JLabel jlModeOfPaymentType;
    private javax.swing.JLabel jlName;
    private javax.swing.JPanel jpContainer;
    private sba.lib.gui.bean.DBeanCompoundFieldCurrency moCurCreditLimit;
    private sba.lib.gui.bean.DBeanFieldInteger moIntCreditDays;
    private sba.lib.gui.bean.DBeanFieldInteger moIntCreditDaysGrace;
    private sba.lib.gui.bean.DBeanFieldKey moKeyAbpBizPartner;
    private sba.lib.gui.bean.DBeanFieldKey moKeyCfdUsage;
    private sba.lib.gui.bean.DBeanFieldKey moKeyCreditType;
    private sba.lib.gui.bean.DBeanFieldKey moKeyCustomerType;
    private sba.lib.gui.bean.DBeanFieldKey moKeyModeOfPaymentType;
    private sba.lib.gui.bean.DBeanFieldText moTextCode;
    private sba.lib.gui.bean.DBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addAllListeners() {
        moKeyCreditType.addItemListener(this);
    }

    @Override
    public void removeAllListeners() {
        moKeyCreditType.removeItemListener(this);
    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyCreditType, DModConsts.BS_CDT_TP, DLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyModeOfPaymentType, DModConsts.FS_MOP_TP, DLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyAbpBizPartner, DModConsts.F_ABP_BPR, DLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyCustomerType, DModConsts.MU_CUS_TP, DLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        moRegistry = (DDbBizPartnerType) registry;

        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(DLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moCurCreditLimit.getField().setValue(moRegistry.getCreditLimit());
        moIntCreditDays.setValue(moRegistry.getCreditDays());
        moIntCreditDaysGrace.setValue(moRegistry.getCreditDaysGrace());
        moKeyCfdUsage.setValue(new int[] { moXmlCatalogCfdUsage.getId(moRegistry.getCfdUsage()) });
        moKeyCustomerType.setValue(new int[] { moRegistry.getFkCustomerTypeId_n() });
        moKeyCreditType.setValue(new int[] { moRegistry.getFkCreditTypeId() });
        moKeyModeOfPaymentType.setValue(new int[] { moRegistry.getFkModeOfPaymentTypeId() });
        moKeyAbpBizPartner.setValue(new int[] { moRegistry.getFkAbpBizPartnerId() });

        setFormEditable(true);
        itemStateKeyCreditType();

        if (mnFormSubtype != DModSysConsts.BS_BPR_CL_CUS) {
            jlModeOfPaymentType.setEnabled(false);
            moKeyModeOfPaymentType.setEnabled(false);
            jlCfdUsage.setEnabled(false);
            moKeyCfdUsage.setEnabled(false);
            jlCustomerType.setEnabled(false);
            moKeyCustomerType.setEnabled(false);
        }

        if (moRegistry.isRegistryNew()) {

        }
        else {
            if (moRegistry.getPkBizPartnerTypeId() == 1) {
                moTextName.setEditable(false);  // preserve name for system default registry
            }
        }

        addAllListeners();
    }

    @Override
    public DDbBizPartnerType getRegistry() throws Exception {
        DDbBizPartnerType registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            registry.setPkBizPartnerClassId(mnFormSubtype);
        }

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setCreditLimit(moCurCreditLimit.getField().getValue());
        registry.setCreditDays(moIntCreditDays.getValue());
        registry.setCreditDaysGrace(moIntCreditDaysGrace.getValue());
        registry.setCfdUsage(!moKeyCfdUsage.isEnabled() || moKeyCfdUsage.getSelectedIndex() <= 0 ? "" : moXmlCatalogCfdUsage.getCode(moKeyCfdUsage.getValue()[0]));
        registry.setFkCustomerTypeId_n(!moKeyCustomerType.isEnabled() ? DLibConsts.UNDEFINED : moKeyCustomerType.getValue()[0]);
        registry.setFkCreditTypeId(moKeyCreditType.getValue()[0]);
        registry.setFkModeOfPaymentTypeId(!moKeyModeOfPaymentType.isEnabled() ? DModSysConsts.FS_MOP_TP_NA : moKeyModeOfPaymentType.getValue()[0]);
        registry.setFkAbpBizPartnerId(moKeyAbpBizPartner.getValue()[0]);

        return registry;
    }

    @Override
    public DGuiValidation validateForm() {
        DGuiValidation validation = moFields.validateFields();

        return validation;
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof DGuiFieldKey) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                DGuiFieldKey field = (DGuiFieldKey) e.getSource();

                if (field == moKeyCreditType) {
                    itemStateKeyCreditType();
                }
            }
        }
    }
}
