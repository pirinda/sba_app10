/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sba.mod.lad.form;

import cfd.ver40.DCfdi40Catalogs;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import sba.gui.cat.DXmlCatalog;
import sba.lib.DLibTimeUtils;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiItem;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanFieldKey;
import sba.lib.gui.bean.DBeanForm;
import sba.mod.DModConsts;
import sba.mod.lad.db.DDbTruck;

/**
 *
 * @author Sergio Flores
 */
public class DFormTruck extends DBeanForm implements ActionListener, ItemListener {
    
    protected DDbTruck moTruck;
    
    protected DXmlCatalog moXmlTruckTransportConfig;
    protected DXmlCatalog moXmlTruckPermissionType;

    /**
     * Creates new form DFormTruck
     * @param client GUI Client.
     * @param title Title.
     */
    public DFormTruck(DGuiClient client, String title) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DModConsts.LU_TRUCK, 0, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgBolIntlTransportDirections = new javax.swing.ButtonGroup();
        bgMerchDimensionUnits = new javax.swing.ButtonGroup();
        bgMerchHazardousMaterial = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jpHeader = new javax.swing.JPanel();
        jpTruckInput1 = new javax.swing.JPanel();
        jpTruckInput11 = new javax.swing.JPanel();
        jlTruckTransportConfig = new javax.swing.JLabel();
        moKeyTruckTransportConfig = new sba.lib.gui.bean.DBeanFieldKey();
        jbTruckEditConfig = new javax.swing.JButton();
        jpTruckInput12 = new javax.swing.JPanel();
        jlTruckName = new javax.swing.JLabel();
        moTextTruckName = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput13 = new javax.swing.JPanel();
        jlTruckCode = new javax.swing.JLabel();
        moTextTruckCode = new sba.lib.gui.bean.DBeanFieldText();
        jbTruckGetNextCode = new javax.swing.JButton();
        jpTruckInput14 = new javax.swing.JPanel();
        jlTruckWeightTon = new javax.swing.JLabel();
        moDecTruckWeightTon = new sba.lib.gui.bean.DBeanFieldDecimal();
        jlTruckWeightTonUnit = new javax.swing.JLabel();
        jpTruckInput15 = new javax.swing.JPanel();
        jlTruckPlate = new javax.swing.JLabel();
        moTextTruckPlate = new sba.lib.gui.bean.DBeanFieldText();
        jlTruckModel = new javax.swing.JLabel();
        moYearTruckModel = new sba.lib.gui.bean.DBeanFieldCalendarYear();
        jpTruckInput16 = new javax.swing.JPanel();
        jlTruckPermissionType = new javax.swing.JLabel();
        moKeyTruckPermissionType = new sba.lib.gui.bean.DBeanFieldKey();
        jpTruckInput17 = new javax.swing.JPanel();
        jlTruckPermissionNumber = new javax.swing.JLabel();
        moTextTruckPermissionNumber = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput2 = new javax.swing.JPanel();
        jpTruckInput21 = new javax.swing.JPanel();
        jlTruckCivilInsurance = new javax.swing.JLabel();
        moTextTruckCivilInsurance = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput22 = new javax.swing.JPanel();
        jlTruckCivilPolicy = new javax.swing.JLabel();
        moTextTruckCivilPolicy = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput23 = new javax.swing.JPanel();
        jlTruckEnvironmentInsurance = new javax.swing.JLabel();
        moTextTruckEnvironmentInsurance = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput24 = new javax.swing.JPanel();
        jlTruckEnvironmentPolicy = new javax.swing.JLabel();
        moTextTruckEnvironmentPolicy = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput25 = new javax.swing.JPanel();
        jlTruckCargoInsurance = new javax.swing.JLabel();
        moTextTruckCargoInsurance = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput26 = new javax.swing.JPanel();
        jlTruckCargoPolicy = new javax.swing.JLabel();
        moTextTruckCargoPolicy = new sba.lib.gui.bean.DBeanFieldText();
        jpTruckInput27 = new javax.swing.JPanel();
        jlTruckPrime = new javax.swing.JLabel();
        moCurTruckPrime = new sba.lib.gui.bean.DBeanCompoundFieldCurrency();
        jpTruckInput28 = new javax.swing.JPanel();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jpHeader.setLayout(new java.awt.GridLayout(1, 2));

        jpTruckInput1.setBorder(javax.swing.BorderFactory.createTitledBorder("Autotransporte:"));
        jpTruckInput1.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jpTruckInput11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckTransportConfig.setText("Config.:*");
        jlTruckTransportConfig.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput11.add(jlTruckTransportConfig);

        moKeyTruckTransportConfig.setPreferredSize(new java.awt.Dimension(265, 23));
        jpTruckInput11.add(moKeyTruckTransportConfig);

        jbTruckEditConfig.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sba/gui/img/cmd_std_edit.gif"))); // NOI18N
        jbTruckEditConfig.setToolTipText("Modificar");
        jbTruckEditConfig.setPreferredSize(new java.awt.Dimension(23, 23));
        jpTruckInput11.add(jbTruckEditConfig);

        jpTruckInput1.add(jpTruckInput11);

        jpTruckInput12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckName.setText("Nombre:*");
        jlTruckName.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput12.add(jlTruckName);

        moTextTruckName.setText("TEXT");
        moTextTruckName.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput12.add(moTextTruckName);

        jpTruckInput1.add(jpTruckInput12);

        jpTruckInput13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckCode.setText("Código:*");
        jlTruckCode.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput13.add(jlTruckCode);

        moTextTruckCode.setText("TEXT");
        moTextTruckCode.setPreferredSize(new java.awt.Dimension(60, 23));
        jpTruckInput13.add(moTextTruckCode);

        jbTruckGetNextCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sba/gui/img/cmd_std_mov_lft.gif"))); // NOI18N
        jbTruckGetNextCode.setToolTipText("Obtener siguiente código");
        jbTruckGetNextCode.setPreferredSize(new java.awt.Dimension(23, 23));
        jpTruckInput13.add(jbTruckGetNextCode);

        jpTruckInput1.add(jpTruckInput13);

        jpTruckInput14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckWeightTon.setText("Peso bruto:*");
        jlTruckWeightTon.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput14.add(jlTruckWeightTon);

        moDecTruckWeightTon.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput14.add(moDecTruckWeightTon);

        jlTruckWeightTonUnit.setText("Tn");
        jlTruckWeightTonUnit.setPreferredSize(new java.awt.Dimension(25, 23));
        jpTruckInput14.add(jlTruckWeightTonUnit);

        jpTruckInput1.add(jpTruckInput14);

        jpTruckInput15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckPlate.setText("Placa:*");
        jlTruckPlate.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput15.add(jlTruckPlate);

        moTextTruckPlate.setText("TEXT");
        moTextTruckPlate.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput15.add(moTextTruckPlate);

        jlTruckModel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTruckModel.setText("Modelo:*");
        jlTruckModel.setPreferredSize(new java.awt.Dimension(65, 23));
        jpTruckInput15.add(jlTruckModel);
        jpTruckInput15.add(moYearTruckModel);

        jpTruckInput1.add(jpTruckInput15);

        jpTruckInput16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckPermissionType.setText("Tipo permiso:*");
        jlTruckPermissionType.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput16.add(jlTruckPermissionType);

        moKeyTruckPermissionType.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput16.add(moKeyTruckPermissionType);

        jpTruckInput1.add(jpTruckInput16);

        jpTruckInput17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckPermissionNumber.setText("No. permiso:*");
        jlTruckPermissionNumber.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput17.add(jlTruckPermissionNumber);

        moTextTruckPermissionNumber.setText("TEXT");
        moTextTruckPermissionNumber.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput17.add(moTextTruckPermissionNumber);

        jpTruckInput1.add(jpTruckInput17);

        jpHeader.add(jpTruckInput1);

        jpTruckInput2.setBorder(javax.swing.BorderFactory.createTitledBorder("Seguros:"));
        jpTruckInput2.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jpTruckInput21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckCivilInsurance.setText("Aseg. resp.:*");
        jlTruckCivilInsurance.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput21.add(jlTruckCivilInsurance);

        moTextTruckCivilInsurance.setText("TEXT");
        moTextTruckCivilInsurance.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput21.add(moTextTruckCivilInsurance);

        jpTruckInput2.add(jpTruckInput21);

        jpTruckInput22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckCivilPolicy.setText("Póliza resp.:*");
        jlTruckCivilPolicy.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput22.add(jlTruckCivilPolicy);

        moTextTruckCivilPolicy.setText("TEXT");
        moTextTruckCivilPolicy.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput22.add(moTextTruckCivilPolicy);

        jpTruckInput2.add(jpTruckInput22);

        jpTruckInput23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckEnvironmentInsurance.setText("Aseg. amb.:");
        jlTruckEnvironmentInsurance.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput23.add(jlTruckEnvironmentInsurance);

        moTextTruckEnvironmentInsurance.setText("TEXT");
        moTextTruckEnvironmentInsurance.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput23.add(moTextTruckEnvironmentInsurance);

        jpTruckInput2.add(jpTruckInput23);

        jpTruckInput24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckEnvironmentPolicy.setText("Póliza amb.:");
        jlTruckEnvironmentPolicy.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput24.add(jlTruckEnvironmentPolicy);

        moTextTruckEnvironmentPolicy.setText("TEXT");
        moTextTruckEnvironmentPolicy.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput24.add(moTextTruckEnvironmentPolicy);

        jpTruckInput2.add(jpTruckInput24);

        jpTruckInput25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckCargoInsurance.setText("Aseg. carga:");
        jlTruckCargoInsurance.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput25.add(jlTruckCargoInsurance);

        moTextTruckCargoInsurance.setText("TEXT");
        moTextTruckCargoInsurance.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput25.add(moTextTruckCargoInsurance);

        jpTruckInput2.add(jpTruckInput25);

        jpTruckInput26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckCargoPolicy.setText("Póliza carga:");
        jlTruckCargoPolicy.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput26.add(jlTruckCargoPolicy);

        moTextTruckCargoPolicy.setText("TEXT");
        moTextTruckCargoPolicy.setPreferredSize(new java.awt.Dimension(290, 23));
        jpTruckInput26.add(moTextTruckCargoPolicy);

        jpTruckInput2.add(jpTruckInput26);

        jpTruckInput27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTruckPrime.setText("Prima:");
        jlTruckPrime.setPreferredSize(new java.awt.Dimension(75, 23));
        jpTruckInput27.add(jlTruckPrime);
        jpTruckInput27.add(moCurTruckPrime);

        jpTruckInput2.add(jpTruckInput27);

        jpTruckInput28.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jpTruckInput2.add(jpTruckInput28);

        jpHeader.add(jpTruckInput2);

        jPanel1.add(jpHeader, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgBolIntlTransportDirections;
    private javax.swing.ButtonGroup bgMerchDimensionUnits;
    private javax.swing.ButtonGroup bgMerchHazardousMaterial;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbTruckEditConfig;
    private javax.swing.JButton jbTruckGetNextCode;
    private javax.swing.JLabel jlTruckCargoInsurance;
    private javax.swing.JLabel jlTruckCargoPolicy;
    private javax.swing.JLabel jlTruckCivilInsurance;
    private javax.swing.JLabel jlTruckCivilPolicy;
    private javax.swing.JLabel jlTruckCode;
    private javax.swing.JLabel jlTruckEnvironmentInsurance;
    private javax.swing.JLabel jlTruckEnvironmentPolicy;
    private javax.swing.JLabel jlTruckModel;
    private javax.swing.JLabel jlTruckName;
    private javax.swing.JLabel jlTruckPermissionNumber;
    private javax.swing.JLabel jlTruckPermissionType;
    private javax.swing.JLabel jlTruckPlate;
    private javax.swing.JLabel jlTruckPrime;
    private javax.swing.JLabel jlTruckTransportConfig;
    private javax.swing.JLabel jlTruckWeightTon;
    private javax.swing.JLabel jlTruckWeightTonUnit;
    private javax.swing.JPanel jpHeader;
    private javax.swing.JPanel jpTruckInput1;
    private javax.swing.JPanel jpTruckInput11;
    private javax.swing.JPanel jpTruckInput12;
    private javax.swing.JPanel jpTruckInput13;
    private javax.swing.JPanel jpTruckInput14;
    private javax.swing.JPanel jpTruckInput15;
    private javax.swing.JPanel jpTruckInput16;
    private javax.swing.JPanel jpTruckInput17;
    private javax.swing.JPanel jpTruckInput2;
    private javax.swing.JPanel jpTruckInput21;
    private javax.swing.JPanel jpTruckInput22;
    private javax.swing.JPanel jpTruckInput23;
    private javax.swing.JPanel jpTruckInput24;
    private javax.swing.JPanel jpTruckInput25;
    private javax.swing.JPanel jpTruckInput26;
    private javax.swing.JPanel jpTruckInput27;
    private javax.swing.JPanel jpTruckInput28;
    private sba.lib.gui.bean.DBeanCompoundFieldCurrency moCurTruckPrime;
    private sba.lib.gui.bean.DBeanFieldDecimal moDecTruckWeightTon;
    private sba.lib.gui.bean.DBeanFieldKey moKeyTruckPermissionType;
    private sba.lib.gui.bean.DBeanFieldKey moKeyTruckTransportConfig;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckCargoInsurance;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckCargoPolicy;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckCivilInsurance;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckCivilPolicy;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckCode;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckEnvironmentInsurance;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckEnvironmentPolicy;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckName;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckPermissionNumber;
    private sba.lib.gui.bean.DBeanFieldText moTextTruckPlate;
    private sba.lib.gui.bean.DBeanFieldCalendarYear moYearTruckModel;
    // End of variables declaration//GEN-END:variables

    /*
     * General private methods
     */

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 800, 500);
        
        moKeyTruckTransportConfig.setKeySettings(miClient, DGuiUtils.getLabelName(jlTruckTransportConfig), true);
        moTextTruckName.setTextSettings(DGuiUtils.getLabelName(jlTruckName), 100);
        moTextTruckCode.setTextSettings(DGuiUtils.getLabelName(jlTruckCode), 10);
        moDecTruckWeightTon.setDecimalSettings(DGuiUtils.getLabelName(jlTruckWeightTon), DGuiConsts.GUI_TYPE_DEC_AMT, true);
        moTextTruckPlate.setTextSettings(DGuiUtils.getLabelName(jlTruckPlate), 7);
        moYearTruckModel.setCalendarSettings(DGuiUtils.getLabelName(jlTruckModel));
        moKeyTruckPermissionType.setKeySettings(miClient, DGuiUtils.getLabelName(jlTruckPermissionType), true);
        moTextTruckPermissionNumber.setTextSettings(DGuiUtils.getLabelName(jlTruckPermissionNumber), 50);
        
        moTextTruckCivilInsurance.setTextSettings(DGuiUtils.getLabelName(jlTruckCivilInsurance), 50);
        moTextTruckCivilPolicy.setTextSettings(DGuiUtils.getLabelName(jlTruckCivilPolicy), 30);
        moTextTruckEnvironmentInsurance.setTextSettings(DGuiUtils.getLabelName(jlTruckEnvironmentInsurance), 50, 0);
        moTextTruckEnvironmentPolicy.setTextSettings(DGuiUtils.getLabelName(jlTruckEnvironmentPolicy), 30, 0);
        moTextTruckCargoInsurance.setTextSettings(DGuiUtils.getLabelName(jlTruckCargoInsurance), 50, 0);
        moTextTruckCargoPolicy.setTextSettings(DGuiUtils.getLabelName(jlTruckCargoPolicy), 30, 0);
        moCurTruckPrime.setCompoundFieldSettings(miClient);
        moCurTruckPrime.getField().setDecimalSettings(DGuiUtils.getLabelName(jlTruckPrime), DGuiConsts.GUI_TYPE_DEC_AMT, false);
        
        moFields.addField(moKeyTruckTransportConfig);
        moFields.addField(moTextTruckName);
        moFields.addField(moTextTruckCode);
        moFields.addField(moDecTruckWeightTon);
        moFields.addField(moTextTruckPlate);
        moFields.addField(moYearTruckModel);
        moFields.addField(moKeyTruckPermissionType);
        moFields.addField(moTextTruckPermissionNumber);
        
        moFields.addField(moTextTruckCivilInsurance);
        moFields.addField(moTextTruckCivilPolicy);
        moFields.addField(moTextTruckEnvironmentInsurance);
        moFields.addField(moTextTruckEnvironmentPolicy);
        moFields.addField(moTextTruckCargoInsurance);
        moFields.addField(moTextTruckCargoPolicy);
        moFields.addField(moCurTruckPrime.getField());
        
        moFields.setFormButton(jbSave);
        
        try {
            moXmlTruckTransportConfig = new DXmlCatalog(DCfdi40Catalogs.XML_CCP_CFG_AUTO, "xml/" + DCfdi40Catalogs.XML_CCP_CFG_AUTO + DXmlCatalog.XmlFileExt, false, "", "", new String[] { "trailer" });
            moXmlTruckPermissionType = new DXmlCatalog(DCfdi40Catalogs.XML_CCP_PERM_TP, "xml/" + DCfdi40Catalogs.XML_CCP_PERM_TP + DXmlCatalog.XmlFileExt, false);
            
            moXmlTruckTransportConfig.populateCatalog(moKeyTruckTransportConfig);
            moXmlTruckPermissionType.populateCatalog(moKeyTruckPermissionType);
        }
        catch (Exception e) {
            DLibUtils.showException(this, e);
        }
    }
    
    private void renderTruck(final DDbTruck truck) {
        moTruck = truck;
        
        if (moTruck == null) {
            moFields.resetFields();
        }
        else {
            moKeyTruckTransportConfig.setValue(new int[] { moXmlTruckTransportConfig.getId(moTruck.getTransportConfigCode()) });
            itemStateChangedTruckTransportConfig();
            moTextTruckName.setValue(moTruck.getName());
            moTextTruckCode.setValue(moTruck.getCode());
            moDecTruckWeightTon.setValue(moTruck.getWeightTon());
            moTextTruckPlate.setValue(moTruck.getPlate());
            moYearTruckModel.setValue(moTruck.getModel());
            moKeyTruckPermissionType.setValue(new int[] { moXmlTruckPermissionType.getId(moTruck.getPermissionTypeCode()) });
            itemStateChangedTruckPermissionType();
            moTextTruckPermissionNumber.setValue(moTruck.getPermissionNumber());

            moTextTruckCivilInsurance.setValue(moTruck.getCivilInsurance());
            moTextTruckCivilPolicy.setValue(moTruck.getCivilPolicy());
            moTextTruckEnvironmentInsurance.setValue(moTruck.getEnvironmentInsurance());
            moTextTruckEnvironmentPolicy.setValue(moTruck.getEnvironmentPolicy());
            moTextTruckCargoInsurance.setValue(moTruck.getCargoInsurance());
            moTextTruckCargoPolicy.setValue(moTruck.getCargoPolicy());
            moCurTruckPrime.getField().setValue(moTruck.getPrime());
        }
    }

    private void actionPerformedTruckEditConfig() {
        if (miClient.showMsgBoxConfirm("¿Está seguro que desea cambiar la configuración del autotransporte?") == JOptionPane.YES_OPTION) {
            jbTruckEditConfig.setEnabled(false);
            moKeyTruckTransportConfig.setEnabled(true);
            moKeyTruckTransportConfig.requestFocusInWindow();
        }
    }
    
    private void actionPerformedTruckGetNextCode() {
        try {
            if (moTextTruckCode.getValue().isEmpty() || 
                    miClient.showMsgBoxConfirm("¿Está seguro que desea obtener el siguiente código para el campo '" + DGuiUtils.getLabelName(jlTruckCode) + "'?") == JOptionPane.YES_OPTION) {
                int nextCode = DFormBolUtils.getNextCode(miClient.getSession(), DModConsts.LU_TRUCK, 0);
                moTextTruckCode.setValue("" + nextCode);
                moTextTruckCode.requestFocusInWindow();
            }
        }
        catch (Exception e) {
            DLibUtils.showException(this, e);
        }
    }
    
    @SuppressWarnings("unchecked")
    private void itemStateChangedTruckTransportConfig() {
        if (moKeyTruckTransportConfig.getSelectedIndex() <= 0) {
            moKeyTruckTransportConfig.setToolTipText(null);
        }
        else {
            moKeyTruckTransportConfig.setToolTipText(moKeyTruckTransportConfig.getSelectedItem().getItem());
        }
    }
    
    private void itemStateChangedTruckPermissionType() {
        if (moKeyTruckPermissionType.getSelectedIndex() <= 0) {
            moKeyTruckPermissionType.setToolTipText(null);
        }
        else {
            moKeyTruckPermissionType.setToolTipText(moKeyTruckPermissionType.getSelectedItem().getItem());
        }
    }
    
    /*
     * DBeanForm methods
     */

    @Override
    public void addAllListeners() {
        jbTruckEditConfig.addActionListener(this);
        jbTruckGetNextCode.addActionListener(this);
        
        moKeyTruckTransportConfig.addItemListener(this);
        moKeyTruckPermissionType.addItemListener(this);
    }

    @Override
    public void removeAllListeners() {
        jbTruckEditConfig.removeActionListener(this);
        jbTruckGetNextCode.removeActionListener(this);
        
        moKeyTruckTransportConfig.removeItemListener(this);
        moKeyTruckPermissionType.removeItemListener(this);
    }

    @Override
    public void reloadCatalogues() {

    }
    
    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        moTruck = (DDbTruck) registry;

        mnFormResult = 0;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moTruck.isRegistryNew()) {
            moTruck.initPrimaryKey();
            
            moTruck.setModel(DLibTimeUtils.digestYear(new Date())[0]);
            
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(DLibUtils.textKey(moTruck.getPrimaryKey()));
        }

        setFormEditable(true);
        
        renderTruck(moTruck);
        
        if (moTruck.isRegistryNew()) {
            moKeyTruckTransportConfig.setEnabled(true);
            jbTruckEditConfig.setEnabled(false);
        }
        else {
            moKeyTruckTransportConfig.setEnabled(false);
            jbTruckEditConfig.setEnabled(true);
        }
        
        addAllListeners();
    }

    @Override
    public DDbRegistry getRegistry() throws Exception {
        DDbTruck truck = moTruck.clone();

        if (truck.isRegistryNew()) {
            //truck.setPkTruckId(...);
        }
        
        truck.setCode(moTextTruckCode.getValue());
        truck.setName(moTextTruckName.getValue());
        truck.setWeightTon(moDecTruckWeightTon.getValue());
        truck.setPlate(moTextTruckPlate.getValue());
        truck.setModel(moYearTruckModel.getValue());
        DGuiItem guiItem1 = moKeyTruckTransportConfig.getSelectedItem();
        String[] codeAndName1 = guiItem1.getItem().split(" - ");
        truck.setTransportConfigCode(guiItem1.getCode());
        truck.setTransportConfigName(codeAndName1[1]);
        DGuiItem guiItem2 = moKeyTruckPermissionType.getSelectedItem();
        String[] codeAndName2 = guiItem2.getItem().split(" - ");
        truck.setPermissionTypeCode(guiItem2.getCode());
        truck.setPermissionTypeName(codeAndName2[1]);
        truck.setPermissionNumber(moTextTruckPermissionNumber.getValue());
        truck.setCivilInsurance(moTextTruckCivilInsurance.getValue());
        truck.setCivilPolicy(moTextTruckCivilPolicy.getValue());
        truck.setEnvironmentInsurance(moTextTruckEnvironmentInsurance.getValue());
        truck.setEnvironmentPolicy(moTextTruckEnvironmentPolicy.getValue());
        truck.setCargoInsurance(moTextTruckCargoInsurance.getValue());
        truck.setCargoPolicy(moTextTruckCargoPolicy.getValue());
        truck.setPrime(moCurTruckPrime.getField().getValue());

        truck.setRegistryEdited(true);
        
        return truck;
    }

    @Override
    public DGuiValidation validateForm() {
        DGuiValidation validation = moFields.validateFields();
        
        return validation;
    }
    
    /*
     * Listeners methods
     */

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();
            
            if (button == jbTruckEditConfig) {
                actionPerformedTruckEditConfig();
            }
            else if (button == jbTruckGetNextCode) {
                actionPerformedTruckGetNextCode();
            }
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof DBeanFieldKey) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                DBeanFieldKey field = (DBeanFieldKey) e.getSource();

                if (field == moKeyTruckTransportConfig) {
                    itemStateChangedTruckTransportConfig();
                }
                else if (field == moKeyTruckPermissionType) {
                    itemStateChangedTruckPermissionType();
                }
            }
        }
    }
}
