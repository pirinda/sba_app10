/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DDialogUserSession.java
 *
 * Created on 25/09/2011, 05:20:14 PM
 */

package sba.mod.cfg.form;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sba.gui.DGuiClientSessionCustom;
import sba.gui.util.DUtilConsts;
import sba.lib.DLibConsts;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiItem;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanFormDialog;
import sba.mod.DModConsts;
import sba.mod.bpr.db.DDbBranch;
import sba.mod.cfg.db.DDbBranchCash;
import sba.mod.cfg.db.DDbBranchWarehouse;
import sba.mod.cfg.db.DDbUser;
import sba.mod.trn.db.DDbDpsSeriesBranch;

/**
 *
 * @author Sergio Flores
 */
public class DDialogUserSession extends DBeanFormDialog implements ActionListener, ListSelectionListener {

    private DDbUser moRegistry;

    /** Creates new form DDialogUserSession */
    public DDialogUserSession(DGuiClient client, String title) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DLibConsts.UNDEFINED, DLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlUser = new javax.swing.JLabel();
        jtfUser = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jckUniversal = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jckUniversalCash = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jckUniversalWarehouse = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jckUniversalDpsSeries = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jlCompany = new javax.swing.JLabel();
        jtfCompany = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jlBranch = new javax.swing.JLabel();
        jspBranches = new javax.swing.JScrollPane();
        jltBranches = new javax.swing.JList();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jlBranchCash = new javax.swing.JLabel();
        jspBranchCashes = new javax.swing.JScrollPane();
        jltBranchCashes = new javax.swing.JList();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jlBranchWarehouse = new javax.swing.JLabel();
        jbShowAllBrancWarehouses = new javax.swing.JButton();
        jspBranchWarehouses = new javax.swing.JScrollPane();
        jltBranchWarehouses = new javax.swing.JList();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jlBranchDpsSeries = new javax.swing.JLabel();
        jspBranchDpsSeries = new javax.swing.JScrollPane();
        jltBranchDpsSeries = new javax.swing.JList();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Acceso a la empresa:"));
        jPanel7.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        jPanel2.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUser.setText("Usuario:");
        jlUser.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel3.add(jlUser);

        jtfUser.setEditable(false);
        jtfUser.setFocusable(false);
        jtfUser.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel3.add(jtfUser);

        jPanel2.add(jPanel3);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckUniversal.setText("Acceso universal a la empresa");
        jckUniversal.setEnabled(false);
        jckUniversal.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel12.add(jckUniversal);

        jPanel2.add(jPanel12);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckUniversalCash.setText("Acceso universal a cuentas de dinero");
        jckUniversalCash.setEnabled(false);
        jckUniversalCash.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel4.add(jckUniversalCash);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckUniversalWarehouse.setText("Acceso universal a almacenes de bienes");
        jckUniversalWarehouse.setEnabled(false);
        jckUniversalWarehouse.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel5.add(jckUniversalWarehouse);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckUniversalDpsSeries.setText("Acceso universal a series de documentos");
        jckUniversalDpsSeries.setEnabled(false);
        jckUniversalDpsSeries.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel6.add(jckUniversalDpsSeries);

        jPanel2.add(jPanel6);

        jPanel7.add(jPanel2);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel9.setLayout(new java.awt.BorderLayout());

        jlCompany.setText("Empresa actual:");
        jlCompany.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel9.add(jlCompany, java.awt.BorderLayout.WEST);

        jtfCompany.setEditable(false);
        jtfCompany.setFocusable(false);
        jtfCompany.setPreferredSize(new java.awt.Dimension(170, 23));
        jPanel9.add(jtfCompany, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jlBranch.setText("Sucursal empresa actual:");
        jlBranch.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel11.add(jlBranch);

        jPanel10.add(jPanel11, java.awt.BorderLayout.NORTH);

        jspBranches.setPreferredSize(new java.awt.Dimension(35, 75));

        jltBranches.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jltBranches.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jltBranches.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jltBranchesKeyPressed(evt);
            }
        });
        jspBranches.setViewportView(jltBranches);

        jPanel10.add(jspBranches, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel7.add(jPanel8);

        jPanel1.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Acceso a la sucursal de la empresa:"));
        jPanel13.setLayout(new java.awt.GridLayout(1, 3, 5, 5));

        jPanel14.setLayout(new java.awt.BorderLayout());

        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jlBranchCash.setText("Cuenta de dinero actual:");
        jlBranchCash.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel15.add(jlBranchCash);

        jPanel14.add(jPanel15, java.awt.BorderLayout.PAGE_START);

        jltBranchCashes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jltBranchCashes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jltBranchCashes.setToolTipText(DGuiConsts.MSG_OPTION_DBL_CLICK);
        jltBranchCashes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jltBranchCashesMouseClicked(evt);
            }
        });
        jltBranchCashes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jltBranchCashesKeyPressed(evt);
            }
        });
        jspBranchCashes.setViewportView(jltBranchCashes);

        jPanel14.add(jspBranchCashes, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel14);

        jPanel16.setLayout(new java.awt.BorderLayout());

        jPanel17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jlBranchWarehouse.setText("Almac√©n de bienes actual:");
        jlBranchWarehouse.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel17.add(jlBranchWarehouse);

        jbShowAllBrancWarehouses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sba/gui/img/cmd_fil_bra_ent.gif"))); // NOI18N
        jbShowAllBrancWarehouses.setToolTipText("Ver todos");
        jbShowAllBrancWarehouses.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel17.add(jbShowAllBrancWarehouses);

        jPanel16.add(jPanel17, java.awt.BorderLayout.PAGE_START);

        jltBranchWarehouses.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jltBranchWarehouses.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jltBranchWarehouses.setToolTipText(DGuiConsts.MSG_OPTION_DBL_CLICK);
        jltBranchWarehouses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jltBranchWarehousesMouseClicked(evt);
            }
        });
        jltBranchWarehouses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jltBranchWarehousesKeyPressed(evt);
            }
        });
        jspBranchWarehouses.setViewportView(jltBranchWarehouses);

        jPanel16.add(jspBranchWarehouses, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel16);

        jPanel18.setLayout(new java.awt.BorderLayout());

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jlBranchDpsSeries.setText("Serie de documentos actual:");
        jlBranchDpsSeries.setPreferredSize(new java.awt.Dimension(175, 23));
        jPanel19.add(jlBranchDpsSeries);

        jPanel18.add(jPanel19, java.awt.BorderLayout.PAGE_START);

        jltBranchDpsSeries.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jltBranchDpsSeries.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jltBranchDpsSeries.setToolTipText(DGuiConsts.MSG_OPTION_DBL_CLICK);
        jltBranchDpsSeries.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jltBranchDpsSeriesMouseClicked(evt);
            }
        });
        jltBranchDpsSeries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jltBranchDpsSeriesKeyPressed(evt);
            }
        });
        jspBranchDpsSeries.setViewportView(jltBranchDpsSeries);

        jPanel18.add(jspBranchDpsSeries, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel18);

        jPanel1.add(jPanel13, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jltBranchesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jltBranchesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jltBranchCashes.requestFocus();
        }
    }//GEN-LAST:event_jltBranchesKeyPressed

    private void jltBranchCashesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jltBranchCashesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jltBranchWarehouses.requestFocus();
        }
    }//GEN-LAST:event_jltBranchCashesKeyPressed

    private void jltBranchWarehousesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jltBranchWarehousesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jltBranchDpsSeries.requestFocus();
        }
    }//GEN-LAST:event_jltBranchWarehousesKeyPressed

    private void jltBranchDpsSeriesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jltBranchDpsSeriesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbSave.requestFocus();
        }
    }//GEN-LAST:event_jltBranchDpsSeriesKeyPressed

    private void jltBranchCashesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jltBranchCashesMouseClicked
        if (evt.getClickCount() == 2) {
            actionSave();
        }
    }//GEN-LAST:event_jltBranchCashesMouseClicked

    private void jltBranchWarehousesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jltBranchWarehousesMouseClicked
        if (evt.getClickCount() == 2) {
            actionSave();
        }
    }//GEN-LAST:event_jltBranchWarehousesMouseClicked

    private void jltBranchDpsSeriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jltBranchDpsSeriesMouseClicked
        if (evt.getClickCount() == 2) {
            actionSave();
        }
    }//GEN-LAST:event_jltBranchDpsSeriesMouseClicked

    @Override
    protected void windowActivated() {
        if (mbFirstActivation) {
            mbFirstActivation = false;
            jltBranches.requestFocus();
        }
    }

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 640, 400);
        jbSave.setText(DGuiConsts.TXT_BTN_OK);
    }
    
    private void actionShowAllBrancWarehouses() {
        Vector<DGuiItem> items = new Vector<DGuiItem>();
        
        for (DDbBranchWarehouse entity : moRegistry.getAuxBranchWarehouses()) {
            items.add(new DGuiItem(entity.getPrimaryKey(), entity.getName()));
        }

        jltBranchWarehouses.setListData(items);
        if (items.size() >= 1 && !jckUniversalWarehouse.isSelected()) {
            jltBranchWarehouses.setSelectedIndex(0);
        }
        
        jbShowAllBrancWarehouses.setEnabled(false);
        jltBranchWarehouses.requestFocus();
    }

    private void valueChangedBranches() {
        int[] branchKey = null;
        Vector<DGuiItem> items = null;

        if (jltBranches.getSelectedIndex() == -1) {
            items = new Vector<DGuiItem>();

            jckUniversalCash.setSelected(false);
            jckUniversalWarehouse.setSelected(false);
            jckUniversalDpsSeries.setSelected(false);

            jltBranchCashes.setListData(items);
            jltBranchWarehouses.setListData(items);
            jltBranchDpsSeries.setListData(items);
            
            jbShowAllBrancWarehouses.setEnabled(false);
        }
        else {
            branchKey = ((DGuiItem) jltBranches.getSelectedValue()).getPrimaryKey();

            jckUniversalCash.setSelected(moRegistry.hasUniversalAccess() || moRegistry.hasUniversalAccessToBranchCashes(branchKey));
            jckUniversalWarehouse.setSelected(moRegistry.hasUniversalAccess() || moRegistry.hasUniversalAccessToBranchWarehouses(branchKey));
            jckUniversalDpsSeries.setSelected(moRegistry.hasUniversalAccess() || moRegistry.hasUniversalAccessToBranchDpsSeries(branchKey));

            items = new Vector<DGuiItem>();
            for (DDbBranchCash entity : moRegistry.getAuxBranchCashes(branchKey)) {
                items.add(new DGuiItem(entity.getPrimaryKey(), entity.getName()));
            }

            jltBranchCashes.setListData(items);
            if (items.size() >= 1 && !jckUniversalCash.isSelected()) {
                jltBranchCashes.setSelectedIndex(0);
            }

            items = new Vector<DGuiItem>();
            for (DDbBranchWarehouse entity : moRegistry.getAuxBranchWarehouses(branchKey)) {
                items.add(new DGuiItem(entity.getPrimaryKey(), entity.getName()));
            }

            jltBranchWarehouses.setListData(items);
            if (items.size() >= 1 && !jckUniversalWarehouse.isSelected()) {
                jltBranchWarehouses.setSelectedIndex(0);
            }

            items = new Vector<DGuiItem>();
            for (DDbDpsSeriesBranch entity : moRegistry.getAuxBranchDpsSeries(branchKey)) {
                items.add(new DGuiItem(entity.getPrimaryKey(), entity.getDbDpsTypeName() + " (" + entity.getDbSeries() + ")"));
            }

            jltBranchDpsSeries.setListData(items);
            if (items.size() >= 1 && !jckUniversalDpsSeries.isSelected()) {
                jltBranchDpsSeries.setSelectedIndex(0);
            }
            
            jbShowAllBrancWarehouses.setEnabled(jckUniversalWarehouse.isSelected());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbShowAllBrancWarehouses;
    private javax.swing.JCheckBox jckUniversal;
    private javax.swing.JCheckBox jckUniversalCash;
    private javax.swing.JCheckBox jckUniversalDpsSeries;
    private javax.swing.JCheckBox jckUniversalWarehouse;
    private javax.swing.JLabel jlBranch;
    private javax.swing.JLabel jlBranchCash;
    private javax.swing.JLabel jlBranchDpsSeries;
    private javax.swing.JLabel jlBranchWarehouse;
    private javax.swing.JLabel jlCompany;
    private javax.swing.JLabel jlUser;
    private javax.swing.JList jltBranchCashes;
    private javax.swing.JList jltBranchDpsSeries;
    private javax.swing.JList jltBranchWarehouses;
    private javax.swing.JList jltBranches;
    private javax.swing.JScrollPane jspBranchCashes;
    private javax.swing.JScrollPane jspBranchDpsSeries;
    private javax.swing.JScrollPane jspBranchWarehouses;
    private javax.swing.JScrollPane jspBranches;
    private javax.swing.JTextField jtfCompany;
    private javax.swing.JTextField jtfUser;
    // End of variables declaration//GEN-END:variables

    public DGuiClientSessionCustom getClientSession() {
        DGuiClientSessionCustom sessionCustom = (DGuiClientSessionCustom) miClient.getSession().getSessionCustom();

        sessionCustom.setBranchKey(jltBranches.getSelectedIndex() == -1 ? null : ((DGuiItem) jltBranches.getSelectedValue()).getPrimaryKey());
        sessionCustom.setBranchCashKey(jltBranchCashes.getSelectedIndex() == -1 ? null : ((DGuiItem) jltBranchCashes.getSelectedValue()).getPrimaryKey());
        sessionCustom.setBranchWarehouseKey(jltBranchWarehouses.getSelectedIndex() == -1 ? null : ((DGuiItem) jltBranchWarehouses.getSelectedValue()).getPrimaryKey());
        sessionCustom.setBranchDpsSeriesKey(jltBranchDpsSeries.getSelectedIndex() == -1 ? null : ((DGuiItem) jltBranchDpsSeries.getSelectedValue()).getPrimaryKey());

        return sessionCustom;
    }

    @Override
    public void addAllListeners() {
        jbShowAllBrancWarehouses.addActionListener(this);
        jltBranches.addListSelectionListener(this);
    }

    @Override
    public void removeAllListeners() {
        jbShowAllBrancWarehouses.removeActionListener(this);
        jltBranches.removeListSelectionListener(this);
    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        Vector<DGuiItem> itemBranches = new Vector<DGuiItem>();

        moRegistry = (DDbUser) registry;

        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
        }
        else {

        }

        jtfUser.setText(moRegistry.getName());
        jtfUser.setCaretPosition(0);

        jtfCompany.setText((String) miClient.getSession().readField(DModConsts.BU_BPR, new int[] { DUtilConsts.BPR_CO_ID }, DDbRegistry.FIELD_NAME));
        jtfCompany.setCaretPosition(0);

        jckUniversal.setSelected(moRegistry.hasUniversalAccess());

        for (DDbBranch branch : moRegistry.getAuxBranches()) {
            itemBranches.add(new DGuiItem(branch.getPrimaryKey(), branch.getName()));
        }

        jltBranches.setListData(itemBranches);

        if (jltBranches.getModel().getSize() >= 1) {
            jltBranches.setSelectedIndex(0);
        }

        valueChangedBranches();

        addAllListeners();
    }

    @Override
    public DDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DGuiValidation validateForm() {
        int[] branchKey = null;
        DGuiValidation validation = new DGuiValidation();

        if (jltBranches.getSelectedIndex() == -1) {
            if (!moRegistry.hasUniversalAccess()) {
                validation.setMessage(DGuiConsts.ERR_MSG_FIELD_REQ + "'" + jlBranch.getText() + "'.");
                validation.setComponent(jltBranches);
            }
        }
        else {
            branchKey = ((DGuiItem) jltBranches.getSelectedValue()).getPrimaryKey();

            if (!moRegistry.hasUniversalAccessToBranchCashes(branchKey) && jltBranchCashes.getModel().getSize() > 0 && jltBranchCashes.getSelectedIndex() == -1) {
                validation.setMessage(DGuiConsts.ERR_MSG_FIELD_REQ + "'" + jlBranchCash.getText() + "'.");
                validation.setComponent(jltBranchCashes);
            }
            else if (!moRegistry.hasUniversalAccessToBranchWarehouses(branchKey) && jltBranchWarehouses.getModel().getSize() > 0 && jltBranchWarehouses.getSelectedIndex() == -1) {
                validation.setMessage(DGuiConsts.ERR_MSG_FIELD_REQ + "'" + jlBranchWarehouse.getText() + "'.");
                validation.setComponent(jltBranchWarehouses);
            }
        }

        return validation;
    }

    @Override
    public void resetForm() {
        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();
            
            if (button == jbShowAllBrancWarehouses) {
                actionShowAllBrancWarehouses();
            }
        }
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
            if (e.getSource() instanceof JList) {
                JList list = (JList) e.getSource();

                if (list == jltBranches) {
                    valueChangedBranches();
                }
            }
        }
    }
}
