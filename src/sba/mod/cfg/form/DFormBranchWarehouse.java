/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DFormBranchWarehouse.java
 *
 * Created on 29/08/2011, 08:02:13 PM
 */

package sba.mod.cfg.form;

import sba.gui.util.DUtilConsts;
import sba.lib.DLibConsts;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiParams;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanForm;
import sba.mod.DModConsts;
import sba.mod.cfg.db.DDbBranchWarehouse;

/**
 *
 * @author Sergio Flores
 */
public class DFormBranchWarehouse extends DBeanForm {

    private DDbBranchWarehouse moRegistry;

    /** Creates new form DFormBranchWarehouse */
    public DFormBranchWarehouse(DGuiClient client, String title) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DModConsts.CU_WAH, DLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpContainer = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jlBranch = new javax.swing.JLabel();
        moKeyBranch = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel3 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sba.lib.gui.bean.DBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sba.lib.gui.bean.DBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlType = new javax.swing.JLabel();
        moKeyType = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jlAbpWarehouse = new javax.swing.JLabel();
        moKeyAbpWarehouse = new sba.lib.gui.bean.DBeanFieldKey();

        jpContainer.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jpContainer.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(6, 1, 0, 5));

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBranch.setForeground(java.awt.Color.blue);
        jlBranch.setText("Sucursal empresa:*");
        jlBranch.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel2.add(jlBranch);

        moKeyBranch.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel2.add(moKeyBranch);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setText("CÃ³digo:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlCode);

        moTextCode.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel3.add(moTextCode);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel4.add(moTextName);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlType.setText("Tipo:*");
        jlType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlType);

        moKeyType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel5.add(moKeyType);

        jPanel1.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel1.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlAbpWarehouse.setText("Paquete contable:*");
        jlAbpWarehouse.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlAbpWarehouse);

        moKeyAbpWarehouse.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel7.add(moKeyAbpWarehouse);

        jPanel1.add(jPanel7);

        jpContainer.add(jPanel1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jpContainer, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsCustom() {
        moKeyBranch.setKeySettings(miClient, DGuiUtils.getLabelName(jlBranch.getText()), true);
        moTextCode.setTextSettings(DGuiUtils.getLabelName(jlCode.getText()), 5);
        moTextName.setTextSettings(DGuiUtils.getLabelName(jlName.getText()), 50);
        moKeyType.setKeySettings(miClient, DGuiUtils.getLabelName(jlType.getText()), true);
        moKeyAbpWarehouse.setKeySettings(miClient, DGuiUtils.getLabelName(jlAbpWarehouse.getText()), true);
        
        moFields.addField(moKeyBranch);
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moKeyType);
        moFields.addField(moKeyAbpWarehouse);
        
        moFields.setFormButton(jbSave);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel jlAbpWarehouse;
    private javax.swing.JLabel jlBranch;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlType;
    private javax.swing.JPanel jpContainer;
    private sba.lib.gui.bean.DBeanFieldKey moKeyAbpWarehouse;
    private sba.lib.gui.bean.DBeanFieldKey moKeyBranch;
    private sba.lib.gui.bean.DBeanFieldKey moKeyType;
    private sba.lib.gui.bean.DBeanFieldText moTextCode;
    private sba.lib.gui.bean.DBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyBranch, DModConsts.BU_BRA, DLibConsts.UNDEFINED, new DGuiParams(new int[] { DUtilConsts.BPR_CO_ID }));
        miClient.getSession().populateCatalogue(moKeyType, DModConsts.CS_WAH_TP, DLibConsts.UNDEFINED, null);
        miClient.getSession().populateCatalogue(moKeyAbpWarehouse, DModConsts.F_ABP_WAH, DLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        int bizPartnerId = DLibConsts.UNDEFINED;
        int branchId = DLibConsts.UNDEFINED;

        moRegistry = (DDbBranchWarehouse) registry;

        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        bizPartnerId = moRegistry.getPkBizPartnerId();  // preserver branch key on copy
        branchId = moRegistry.getPkBranchId();          // preserver branch key on copy

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(DLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyBranch.setValue(new int[] { bizPartnerId, branchId });
        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moKeyType.setValue(new int[] { moRegistry.getFkWarehouseTypeId() });
        moKeyAbpWarehouse.setValue(new int[] { moRegistry.getFkAbpWarehouseId() });

        setFormEditable(true);

        if (!moRegistry.isRegistryNew()) {
            moKeyBranch.setEditable(false);
        }

        addAllListeners();
    }

    @Override
    public DDbBranchWarehouse getRegistry() throws Exception {
        DDbBranchWarehouse registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            registry.setPkBizPartnerId(moKeyBranch.getValue()[0]);
            registry.setPkBranchId(moKeyBranch.getValue()[1]);
        }

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setFkWarehouseTypeId(moKeyType.getValue()[0]);
        registry.setFkAbpWarehouseId(moKeyAbpWarehouse.getValue()[0]);

        return registry;
    }

    @Override
    public DGuiValidation validateForm() {
        DGuiValidation validation = moFields.validateFields();

        return validation;
    }
}
