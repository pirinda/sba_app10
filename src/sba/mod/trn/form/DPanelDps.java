/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DPanelDps.java
 *
 * Created on 8/12/2011, 08:18:21 AM
 */

package sba.mod.trn.form;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import sba.gui.util.DUtilConsts;
import sba.lib.DLibConsts;
import sba.lib.DLibTimeUtils;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanPanel;
import sba.mod.DModConsts;
import sba.mod.DModSysConsts;
import sba.mod.bpr.db.DBprUtils;
import sba.mod.bpr.db.DDbBizPartner;
import sba.mod.trn.db.DDbDps;
import sba.mod.trn.db.DTrnAmount;
import sba.mod.trn.db.DTrnUtils;

/**
 *
 * @author Sergio Flores
 */
public class DPanelDps extends DBeanPanel implements ActionListener {

    private int mnYear;
    private int mnCurrentYear;
    private int[] manBookkeepingKey_n;
    private DDbDps moRegistry;
    private boolean mbEnableCardex;
    private DDialogCardexDps moDialogCardexDps;

    /** Creates new form DPanelDps */
    public DPanelDps() {
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jlBizPartner = new javax.swing.JLabel();
        jtfBizPartner = new javax.swing.JTextField();
        jtfBizPartnerCode = new javax.swing.JTextField();
        jtfBizPartnerFiscalId = new javax.swing.JTextField();
        jtfBizPartnerBranch = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jlDpsType = new javax.swing.JLabel();
        jtfDpsType = new javax.swing.JTextField();
        jlNumber = new javax.swing.JLabel();
        jtfNumber = new javax.swing.JTextField();
        jlDate = new javax.swing.JLabel();
        jtfDate = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jlPaymentType = new javax.swing.JLabel();
        jtfPaymentType = new javax.swing.JTextField();
        jlCreditDays = new javax.swing.JLabel();
        jtfCreditDays = new javax.swing.JTextField();
        jlDateMaturity = new javax.swing.JLabel();
        jtfDateMaturity = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jlTotal = new javax.swing.JLabel();
        moCurTotalCy = new sba.lib.gui.bean.DBeanCompoundFieldCurrency();
        jlTotalCy = new javax.swing.JLabel();
        moCurTotal = new sba.lib.gui.bean.DBeanCompoundFieldCurrency();
        jPanel6 = new javax.swing.JPanel();
        jlBalance = new javax.swing.JLabel();
        moCurBalanceCy = new sba.lib.gui.bean.DBeanCompoundFieldCurrency();
        jlBalanceCy = new javax.swing.JLabel();
        moCurBalance = new sba.lib.gui.bean.DBeanCompoundFieldCurrency();
        jSeparator = new javax.swing.JSeparator();
        jlDummy01 = new javax.swing.JLabel();
        jtfYear = new javax.swing.JTextField();
        jbShowCardex = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartner.setText("[Asociado]:");
        jlBizPartner.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel2.add(jlBizPartner);

        jtfBizPartner.setEditable(false);
        jtfBizPartner.setText("TEXT");
        jtfBizPartner.setToolTipText("Nombre");
        jtfBizPartner.setFocusable(false);
        jtfBizPartner.setPreferredSize(new java.awt.Dimension(265, 23));
        jPanel2.add(jtfBizPartner);

        jtfBizPartnerCode.setEditable(false);
        jtfBizPartnerCode.setText("TEXT");
        jtfBizPartnerCode.setToolTipText("Código");
        jtfBizPartnerCode.setFocusable(false);
        jtfBizPartnerCode.setPreferredSize(new java.awt.Dimension(40, 23));
        jPanel2.add(jtfBizPartnerCode);

        jtfBizPartnerFiscalId.setEditable(false);
        jtfBizPartnerFiscalId.setText("TEXT");
        jtfBizPartnerFiscalId.setToolTipText("Registro fiscal");
        jtfBizPartnerFiscalId.setFocusable(false);
        jtfBizPartnerFiscalId.setPreferredSize(new java.awt.Dimension(90, 23));
        jPanel2.add(jtfBizPartnerFiscalId);

        jtfBizPartnerBranch.setEditable(false);
        jtfBizPartnerBranch.setText("TEXT");
        jtfBizPartnerBranch.setToolTipText("Sucursal");
        jtfBizPartnerBranch.setFocusable(false);
        jtfBizPartnerBranch.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel2.add(jtfBizPartnerBranch);

        jPanel1.add(jPanel2);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDpsType.setText("Tipo doc.:");
        jlDpsType.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel5.add(jlDpsType);

        jtfDpsType.setEditable(false);
        jtfDpsType.setText("TEXT");
        jtfDpsType.setFocusable(false);
        jtfDpsType.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel5.add(jtfDpsType);

        jlNumber.setText("Folio doc.:");
        jlNumber.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel5.add(jlNumber);

        jtfNumber.setEditable(false);
        jtfNumber.setText("TEXT");
        jtfNumber.setFocusable(false);
        jtfNumber.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel5.add(jtfNumber);

        jlDate.setText("Fecha doc.:");
        jlDate.setPreferredSize(new java.awt.Dimension(90, 23));
        jPanel5.add(jlDate);

        jtfDate.setEditable(false);
        jtfDate.setText("00/00/0000");
        jtfDate.setFocusable(false);
        jtfDate.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel5.add(jtfDate);

        jPanel1.add(jPanel5);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlPaymentType.setText("Tipo pago:");
        jlPaymentType.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel4.add(jlPaymentType);

        jtfPaymentType.setEditable(false);
        jtfPaymentType.setText("TEXT");
        jtfPaymentType.setFocusable(false);
        jtfPaymentType.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel4.add(jtfPaymentType);

        jlCreditDays.setText("Días crédito:");
        jlCreditDays.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel4.add(jlCreditDays);

        jtfCreditDays.setEditable(false);
        jtfCreditDays.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfCreditDays.setText("0");
        jtfCreditDays.setFocusable(false);
        jtfCreditDays.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel4.add(jtfCreditDays);

        jlDateMaturity.setText("Vencimiento doc.:");
        jlDateMaturity.setPreferredSize(new java.awt.Dimension(90, 23));
        jPanel4.add(jlDateMaturity);

        jtfDateMaturity.setEditable(false);
        jtfDateMaturity.setText("00/00/0000");
        jtfDateMaturity.setFocusable(false);
        jtfDateMaturity.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel4.add(jtfDateMaturity);

        jPanel1.add(jPanel4);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTotal.setText("Total:");
        jlTotal.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel3.add(jlTotal);

        moCurTotalCy.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel3.add(moCurTotalCy);

        jlTotalCy.setText("Total ML:");
        jlTotalCy.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel3.add(jlTotalCy);

        moCurTotal.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel3.add(moCurTotal);

        jPanel1.add(jPanel3);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBalance.setText("Saldo:");
        jlBalance.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel6.add(jlBalance);

        moCurBalanceCy.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel6.add(moCurBalanceCy);

        jlBalanceCy.setText("Saldo ML:");
        jlBalanceCy.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel6.add(jlBalanceCy);

        moCurBalance.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel6.add(moCurBalance);

        jSeparator.setMinimumSize(new java.awt.Dimension(0, 23));
        jSeparator.setPreferredSize(new java.awt.Dimension(0, 23));
        jPanel6.add(jSeparator);

        jlDummy01.setPreferredSize(new java.awt.Dimension(10, 23));
        jPanel6.add(jlDummy01);

        jtfYear.setEditable(false);
        jtfYear.setText("TEXT");
        jtfYear.setToolTipText("Ejercicio");
        jtfYear.setFocusable(false);
        jtfYear.setPreferredSize(new java.awt.Dimension(47, 23));
        jPanel6.add(jtfYear);

        jbShowCardex.setText("...");
        jbShowCardex.setToolTipText("Ver tarjeta auxiliar");
        jbShowCardex.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel6.add(jbShowCardex);

        jPanel1.add(jPanel6);

        add(jPanel1, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsCustom() {
        mbEnableCardex = false;
        moDialogCardexDps = null;
        jtfBizPartnerFiscalId.setToolTipText(DUtilConsts.TXT_FISCAL_ID);
    }

    private void renderYear() {
        mnCurrentYear = mnYear;
        jtfYear.setText(DLibUtils.DecimalFormatCalendarYear.format(mnYear));
    }

    private void actionShowCardex() {
        if (moRegistry == null) {
            miClient.showMsgBoxInformation(DGuiConsts.ERR_MSG_UNDEF_REG);
        }
        else {
            moDialogCardexDps.resetForm();
            moDialogCardexDps.setValue(DModSysConsts.PARAM_YEAR, mnCurrentYear);
            moDialogCardexDps.setValue(DModSysConsts.PARAM_BKK_NUM_KEY, manBookkeepingKey_n);
            moDialogCardexDps.setValue(DModSysConsts.PARAM_DPS, moRegistry.getPrimaryKey());
            moDialogCardexDps.populateCardex();
            moDialogCardexDps.setVisible(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JButton jbShowCardex;
    private javax.swing.JLabel jlBalance;
    private javax.swing.JLabel jlBalanceCy;
    private javax.swing.JLabel jlBizPartner;
    private javax.swing.JLabel jlCreditDays;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlDateMaturity;
    private javax.swing.JLabel jlDpsType;
    private javax.swing.JLabel jlDummy01;
    private javax.swing.JLabel jlNumber;
    private javax.swing.JLabel jlPaymentType;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JLabel jlTotalCy;
    private javax.swing.JTextField jtfBizPartner;
    private javax.swing.JTextField jtfBizPartnerBranch;
    private javax.swing.JTextField jtfBizPartnerCode;
    private javax.swing.JTextField jtfBizPartnerFiscalId;
    private javax.swing.JTextField jtfCreditDays;
    private javax.swing.JTextField jtfDate;
    private javax.swing.JTextField jtfDateMaturity;
    private javax.swing.JTextField jtfDpsType;
    private javax.swing.JTextField jtfNumber;
    private javax.swing.JTextField jtfPaymentType;
    private javax.swing.JTextField jtfYear;
    private sba.lib.gui.bean.DBeanCompoundFieldCurrency moCurBalance;
    private sba.lib.gui.bean.DBeanCompoundFieldCurrency moCurBalanceCy;
    private sba.lib.gui.bean.DBeanCompoundFieldCurrency moCurTotal;
    private sba.lib.gui.bean.DBeanCompoundFieldCurrency moCurTotalCy;
    // End of variables declaration//GEN-END:variables

    /*
     * Public methods
     */

    public void enableShowCardex() {
        mbEnableCardex = true;
        moDialogCardexDps = new DDialogCardexDps(miClient);
    }

    /*
     * Overriden methods
     */

    @Override
    public void addAllListeners() {
        jbShowCardex.addActionListener(this);
    }

    @Override
    public void removeAllListeners() {
        jbShowCardex.removeActionListener(this);
    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        DTrnAmount amount = null;
        DDbBizPartner bizPartner = null;

        removeAllListeners();
        reloadCatalogues();

        if (mnYear == 0) {
            mnYear = DLibTimeUtils.digestYear(miClient.getSession().getWorkingDate())[0];
            renderYear();
        }

        if (registry == null) {
            moRegistry = null;

            jlBizPartner.setText("Asociado:");

            jtfBizPartner.setText("");
            jtfBizPartnerFiscalId.setText("");
            jtfBizPartnerCode.setText("");
            jtfBizPartnerBranch.setText("");
            jtfDpsType.setText("");
            jtfNumber.setText("");
            jtfDate.setText("");
            jtfPaymentType.setText("");
            jtfCreditDays.setText("");
            jtfDateMaturity.setText("");

            // Document value:

            moCurTotal.getField().setValue(0d);
            moCurTotalCy.getField().setValue(0d);
            moCurTotalCy.setCurrencyKey(null);

            // Document balance:

            moCurBalance.getField().setValue(0d);
            moCurBalanceCy.getField().setValue(0d);
            moCurBalanceCy.setCurrencyKey(null);
            
            jbShowCardex.setEnabled(false);
        }
        else {
            moRegistry = (DDbDps) registry;

            if (moRegistry.isRegistryNew()) { } else { }

            jlBizPartner.setText(DBprUtils.getBizPartnerClassNameSng(DTrnUtils.getBizPartnerClassByDpsCategory(moRegistry.getFkDpsCategoryId())) + ":");

            bizPartner = (DDbBizPartner) miClient.getSession().readRegistry(DModConsts.BU_BPR, moRegistry.getBizPartnerKey());

            jtfBizPartner.setText(bizPartner.getName());
            jtfBizPartnerFiscalId.setText(bizPartner.getFiscalId());
            jtfBizPartnerCode.setText((String) miClient.getSession().readField(DModConsts.BU_BPR_CFG, new int[] { moRegistry.getFkBizPartnerBizPartnerId(), DTrnUtils.getBizPartnerClassByDpsCategory(moRegistry.getFkDpsCategoryId()) }, DDbRegistry.FIELD_CODE));
            jtfBizPartnerBranch.setText((String) miClient.getSession().readField(DModConsts.BU_BRA, moRegistry.getBizPartnerBranchKey(), DDbRegistry.FIELD_NAME));
            jtfDpsType.setText((String) miClient.getSession().readField(DModConsts.TS_DPS_TP, moRegistry.getDpsTypeKey(), DDbRegistry.FIELD_NAME));
            jtfNumber.setText(moRegistry.getDpsNumber());
            jtfDate.setText(DLibUtils.DateFormatDate.format(moRegistry.getDate()));
            jtfPaymentType.setText((String) miClient.getSession().readField(DModConsts.FS_PAY_TP, new int[] { moRegistry.getFkPaymentTypeId() }, DDbRegistry.FIELD_NAME));
            jtfCreditDays.setText(DLibUtils.DecimalFormatInteger.format(moRegistry.getCreditDays()));
            jtfDateMaturity.setText(DLibUtils.DateFormatDate.format(DLibTimeUtils.addDate(moRegistry.getDateCredit(), 0, 0, moRegistry.getCreditDays())));

            jtfBizPartner.setCaretPosition(0);
            jtfBizPartnerFiscalId.setCaretPosition(0);
            jtfBizPartnerCode.setCaretPosition(0);
            jtfBizPartnerBranch.setCaretPosition(0);
            jtfDpsType.setCaretPosition(0);
            jtfNumber.setCaretPosition(0);
            jtfDate.setCaretPosition(0);
            jtfPaymentType.setCaretPosition(0);
            jtfCreditDays.setCaretPosition(0);
            jtfDateMaturity.setCaretPosition(0);

            // Document value:

            moCurTotal.getField().setValue(moRegistry.getTotal_r());
            moCurTotalCy.getField().setValue(moRegistry.getTotalCy_r());
            moCurTotalCy.setCurrencyKey(moRegistry.getCurrencyKey());

            // Document balance:

            if (manBookkeepingKey_n == null) {
                amount = DTrnUtils.getBalanceForDps(miClient.getSession(), mnYear, moRegistry.getPrimaryKey());
            }
            else {
                amount = DTrnUtils.getBalanceForDps(miClient.getSession(), mnYear, moRegistry.getPrimaryKey(), manBookkeepingKey_n);
            }

            moCurBalance.getField().setValue(amount.getAmount());
            moCurBalanceCy.getField().setValue(amount.getAmountCy());
            moCurBalanceCy.setCurrencyKey(moRegistry.getCurrencyKey());
            
            jbShowCardex.setEnabled(mbEnableCardex);
        }
        
        if (moRegistry.isRegistryNew()) { } else { }

        mnYear = 0; // reset year every time

        addAllListeners();
    }

    @Override
    public DDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DGuiValidation validatePanel() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setPanelSettings(final DGuiClient client) {
        super.setPanelSettings(client);

        moCurTotal.setCompoundFieldSettings(miClient);
        moCurTotal.getField().setDecimalSettings(DGuiUtils.getLabelName(jlTotal.getText()), DGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurTotal.getField().setEditable(false);
        moCurTotalCy.setCompoundFieldSettings(miClient);
        moCurTotalCy.getField().setDecimalSettings(DGuiUtils.getLabelName(jlTotal.getText()), DGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurTotalCy.getField().setEditable(false);
        moCurBalance.setCompoundFieldSettings(miClient);
        moCurBalance.getField().setDecimalSettings(DGuiUtils.getLabelName(jlTotal.getText()), DGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurBalance.getField().setEditable(false);
        moCurBalanceCy.setCompoundFieldSettings(miClient);
        moCurBalanceCy.getField().setDecimalSettings(DGuiUtils.getLabelName(jlTotal.getText()), DGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurBalanceCy.getField().setEditable(false);
    }

    @Override
    public void setValue(final int type, Object value) {
        switch (type) {
            case DModSysConsts.PARAM_YEAR:
                mnYear = (Integer) value;
                renderYear();
                break;
            case DModSysConsts.PARAM_BKK_NUM_KEY:
                manBookkeepingKey_n = (int[]) value;
                break;
            default:
                miClient.showMsgBoxError(DLibConsts.ERR_MSG_OPTION_UNKNOWN);
        }
    }

    @Override
    public Object getValue(final int type) {
        Object value = null;

        switch (type) {
            case DUtilConsts.BAL:
                value = moCurBalance.getField().getValue();
                break;
            case DUtilConsts.BAL_CY:
                value = moCurBalanceCy.getField().getValue();
                break;
            default:
                miClient.showMsgBoxError(DLibConsts.ERR_MSG_OPTION_UNKNOWN);
        }

        return value;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();

            if (button == jbShowCardex) {
                actionShowCardex();
            }
        }
    }
}
