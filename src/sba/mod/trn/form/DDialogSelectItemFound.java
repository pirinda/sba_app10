/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DDialogFindDpsSeries.java
 *
 * Created on 7/11/2011, 07:51:51 PM
 */

package sba.mod.trn.form;

import java.awt.event.KeyEvent;
import java.util.Vector;
import sba.lib.DLibConsts;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiItem;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanFormDialog;
import sba.mod.DModConsts;
import sba.mod.DModSysConsts;
import sba.mod.itm.db.DDbItem;
import sba.mod.trn.db.DTrnItemsFound;
import sba.mod.trn.db.DTrnUtils;

/**
 *
 * @author Sergio Flores
 */
public class DDialogSelectItemFound extends DBeanFormDialog {

    private DTrnItemsFound moItemsFound;

    /** Creates new form DDialogFindDpsSeries
     * @param client GUI client.
     */
    public DDialogSelectItemFound(DGuiClient client) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DLibConsts.UNDEFINED, DLibConsts.UNDEFINED, "Ítems encontrados");
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonGroup = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jlTextToFind = new javax.swing.JLabel();
        jtfFoundBy = new javax.swing.JTextField();
        jtfTextToFind = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jlItem = new javax.swing.JLabel();
        jspItemsFound = new javax.swing.JScrollPane();
        jltItemsFound = new javax.swing.JList();

        jLabel2.setText("jLabel1");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ítems encontrados:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 5, 0));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTextToFind.setText("Texto búsqueda:");
        jlTextToFind.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel1.add(jlTextToFind);

        jtfFoundBy.setEditable(false);
        jtfFoundBy.setFocusable(false);
        jtfFoundBy.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel1.add(jtfFoundBy);

        jtfTextToFind.setEditable(false);
        jtfTextToFind.setFocusable(false);
        jtfTextToFind.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel1.add(jtfTextToFind);

        jPanel3.add(jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 5, 0));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlItem.setText("Seleccionar ítem:");
        jlItem.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlItem);

        jPanel3.add(jPanel4);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        jltItemsFound.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jltItemsFound.setToolTipText(DGuiConsts.MSG_OPTION_DBL_CLICK);
        jltItemsFound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jltItemsFoundMouseClicked(evt);
            }
        });
        jltItemsFound.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jltItemsFoundKeyPressed(evt);
            }
        });
        jspItemsFound.setViewportView(jltItemsFound);

        jPanel2.add(jspItemsFound, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jltItemsFoundKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jltItemsFoundKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbSave.requestFocus();
        }
    }//GEN-LAST:event_jltItemsFoundKeyPressed

    private void jltItemsFoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jltItemsFoundMouseClicked
        if (evt.getClickCount() == 2) {
            actionSave();
        }
    }//GEN-LAST:event_jltItemsFoundMouseClicked

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 480, 300);

        jbSave.setText(DGuiConsts.TXT_BTN_OK);
    }

    @Override
    protected void windowActivated() {
        if (mbFirstActivation) {
            mbFirstActivation = false;
            jltItemsFound.requestFocus();
        }
    }

    @SuppressWarnings("unchecked")
    private void renderItemsFound() {
        DDbItem itemRegistry = null;
        DGuiItem item = null;
        Vector<DGuiItem> items = new Vector<>();

        if (moItemsFound == null) {
            jtfFoundBy.setText("");
            jtfTextToFind.setText("");
        }
        else {
            jtfFoundBy.setText(DTrnUtils.getFoundByName(moItemsFound.getFoundBy()));
            jtfTextToFind.setText(moItemsFound.getTextToFind());

            jtfFoundBy.setCaretPosition(0);
            jtfTextToFind.setCaretPosition(0);

            for (int[] key : moItemsFound.getItemsFoundKeys()) {
                itemRegistry = (DDbItem) miClient.getSession().readRegistry(DModConsts.IU_ITM, key);
                item = new DGuiItem(key, itemRegistry.getName());
                item.setCode(itemRegistry.getCode());
                items.add(item);
            }
        }

        jltItemsFound.setListData(items);

        if (jltItemsFound.getModel().getSize() > 0) {
            jltItemsFound.setSelectedIndex(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup jButtonGroup;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jlItem;
    private javax.swing.JLabel jlTextToFind;
    private javax.swing.JList jltItemsFound;
    private javax.swing.JScrollPane jspItemsFound;
    private javax.swing.JTextField jtfFoundBy;
    private javax.swing.JTextField jtfTextToFind;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DGuiValidation validateForm() {
        DGuiValidation validation = new DGuiValidation();

        if (jltItemsFound.getSelectedIndex() == -1) {
            validation.setMessage(DGuiConsts.ERR_MSG_FIELD_REQ + "'" + DGuiUtils.getLabelName(jlItem.getText()) + "'.");
            validation.setComponent(jltItemsFound);
        }

        return validation;
    }

    @Override
    public void setValue(final int type, final Object value) {
        switch (type) {
            case DModSysConsts.PARAM_OBJ_ITM_FOUND:
                moItemsFound = (DTrnItemsFound) value;
                renderItemsFound();
                break;
            default:
                miClient.showMsgBoxError(DLibConsts.ERR_MSG_OPTION_UNKNOWN);
        }
    }

    @Override
    public Object getValue(final int type) {
        Object value = null;

        switch (type) {
            case DModSysConsts.PARAM_ITM:
                value = ((DGuiItem) jltItemsFound.getSelectedValue()).getPrimaryKey();
                break;
            default:
                miClient.showMsgBoxError(DLibConsts.ERR_MSG_OPTION_UNKNOWN);
        }

        return value;
    }

    @Override
    public void resetForm() {
        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        moItemsFound = null;
        renderItemsFound();

        addAllListeners();
    }
}
