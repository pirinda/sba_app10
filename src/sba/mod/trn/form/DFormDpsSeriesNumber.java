/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DFormDpsSeriesNumber.java
 *
 * Created on 29/08/2011, 08:02:13 PM
 */

package sba.mod.trn.form;

import sba.lib.DLibConsts;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiFieldKeyGroup;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanForm;
import sba.mod.DModConsts;
import sba.mod.trn.db.DDbDpsSeries;
import sba.mod.trn.db.DDbDpsSeriesNumber;

/**
 *
 * @author Sergio Flores
 */
public class DFormDpsSeriesNumber extends DBeanForm {

    private DDbDpsSeriesNumber moRegistry;
    private DGuiFieldKeyGroup moFieldKeyGroup;

    /** Creates new form DFormDpsSeriesNumber */
    public DFormDpsSeriesNumber(DGuiClient client, String title) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DModConsts.CU_CSH, DLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpContainer = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jlDpsCategory = new javax.swing.JLabel();
        moKeyDpsCategory = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel8 = new javax.swing.JPanel();
        jlDpsClass = new javax.swing.JLabel();
        moKeyDpsClass = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel9 = new javax.swing.JPanel();
        jlDpsType = new javax.swing.JLabel();
        moKeyDpsType = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel2 = new javax.swing.JPanel();
        jlDpsSeries = new javax.swing.JLabel();
        moKeyDpsSeries = new sba.lib.gui.bean.DBeanFieldKey();
        jPanel3 = new javax.swing.JPanel();
        jlNumberStart = new javax.swing.JLabel();
        moIntNumberStart = new sba.lib.gui.bean.DBeanFieldInteger();
        jPanel4 = new javax.swing.JPanel();
        jlNumberEnd = new javax.swing.JLabel();
        moIntNumberEnd = new sba.lib.gui.bean.DBeanFieldInteger();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jlApprobeNumber = new javax.swing.JLabel();
        moIntApprobeNumber = new sba.lib.gui.bean.DBeanFieldInteger();
        jPanel6 = new javax.swing.JPanel();
        jlApprobeYear = new javax.swing.JLabel();
        moIntApprobeYear = new sba.lib.gui.bean.DBeanFieldInteger();
        jPanel10 = new javax.swing.JPanel();
        jlApprobeDate = new javax.swing.JLabel();
        moDateApprobeDate = new sba.lib.gui.bean.DBeanFieldDate();
        jPanel13 = new javax.swing.JPanel();
        jlXmlType = new javax.swing.JLabel();
        moKeyXmlType = new sba.lib.gui.bean.DBeanFieldKey();

        jpContainer.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.GridLayout(6, 1, 0, 5));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDpsCategory.setForeground(java.awt.Color.blue);
        jlDpsCategory.setText("Categoría docto.:*");
        jlDpsCategory.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlDpsCategory);

        moKeyDpsCategory.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel7.add(moKeyDpsCategory);

        jPanel1.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDpsClass.setForeground(java.awt.Color.blue);
        jlDpsClass.setText("Clase docto.:*");
        jlDpsClass.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlDpsClass);

        moKeyDpsClass.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel8.add(moKeyDpsClass);

        jPanel1.add(jPanel8);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDpsType.setForeground(java.awt.Color.blue);
        jlDpsType.setText("Tipo docto.:*");
        jlDpsType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlDpsType);

        moKeyDpsType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel9.add(moKeyDpsType);

        jPanel1.add(jPanel9);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDpsSeries.setForeground(java.awt.Color.blue);
        jlDpsSeries.setText("Serie docto.:*");
        jlDpsSeries.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel2.add(jlDpsSeries);

        moKeyDpsSeries.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel2.add(moKeyDpsSeries);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlNumberStart.setText("Folio inicial:*");
        jlNumberStart.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlNumberStart);
        jPanel3.add(moIntNumberStart);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlNumberEnd.setText("Folio final:");
        jlNumberEnd.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlNumberEnd);
        jPanel4.add(moIntNumberEnd);

        jPanel1.add(jPanel4);

        jpContainer.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos para comprobantes fiscales:"));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlApprobeNumber.setText("Número aprobación:");
        jlApprobeNumber.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlApprobeNumber);
        jPanel5.add(moIntApprobeNumber);

        jPanel12.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlApprobeYear.setText("Año aprobación:");
        jlApprobeYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlApprobeYear);

        moIntApprobeYear.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel6.add(moIntApprobeYear);

        jPanel12.add(jPanel6);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlApprobeDate.setText("Fecha aprobación:");
        jlApprobeDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlApprobeDate);
        jPanel10.add(moDateApprobeDate);

        jPanel12.add(jPanel10);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlXmlType.setText("Tipo XML:*");
        jlXmlType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlXmlType);

        moKeyXmlType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel13.add(moKeyXmlType);

        jPanel12.add(jPanel13);

        jPanel11.add(jPanel12, java.awt.BorderLayout.NORTH);

        jpContainer.add(jPanel11, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpContainer, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 640, 400);

        moFieldKeyGroup = new DGuiFieldKeyGroup(miClient);

        moKeyDpsCategory.setKeySettings(miClient, DGuiUtils.getLabelName(jlDpsCategory.getText()), true);
        moKeyDpsClass.setKeySettings(miClient, DGuiUtils.getLabelName(jlDpsClass.getText()), true);
        moKeyDpsType.setKeySettings(miClient, DGuiUtils.getLabelName(jlDpsType.getText()), true);
        moKeyDpsSeries.setKeySettings(miClient, DGuiUtils.getLabelName(jlDpsSeries.getText()), true);
        moIntNumberStart.setIntegerSettings(DGuiUtils.getLabelName(jlNumberStart.getText()), DGuiConsts.GUI_TYPE_INT_RAW, true);
        moIntNumberEnd.setIntegerSettings(DGuiUtils.getLabelName(jlNumberEnd.getText()), DGuiConsts.GUI_TYPE_INT_RAW, false);
        moIntApprobeNumber.setIntegerSettings(DGuiUtils.getLabelName(jlApprobeNumber.getText()), DGuiConsts.GUI_TYPE_INT_RAW, false);
        moIntApprobeYear.setIntegerSettings(DGuiUtils.getLabelName(jlApprobeYear.getText()), DGuiConsts.GUI_TYPE_INT_RAW, false);
        moDateApprobeDate.setDateSettings(miClient, DGuiUtils.getLabelName(jlApprobeDate.getText()), false);
        moKeyXmlType.setKeySettings(miClient, DGuiUtils.getLabelName(jlXmlType.getText()), true);
        
        moFields.addField(moKeyDpsCategory);
        moFields.addField(moKeyDpsClass);
        moFields.addField(moKeyDpsType);
        moFields.addField(moKeyDpsSeries);
        moFields.addField(moIntNumberStart);
        moFields.addField(moIntNumberEnd);
        moFields.addField(moIntApprobeNumber);
        moFields.addField(moIntApprobeYear);
        moFields.addField(moDateApprobeDate);
        moFields.addField(moKeyXmlType);
        
        moFields.setFormButton(jbSave);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlApprobeDate;
    private javax.swing.JLabel jlApprobeNumber;
    private javax.swing.JLabel jlApprobeYear;
    private javax.swing.JLabel jlDpsCategory;
    private javax.swing.JLabel jlDpsClass;
    private javax.swing.JLabel jlDpsSeries;
    private javax.swing.JLabel jlDpsType;
    private javax.swing.JLabel jlNumberEnd;
    private javax.swing.JLabel jlNumberStart;
    private javax.swing.JLabel jlXmlType;
    private javax.swing.JPanel jpContainer;
    private sba.lib.gui.bean.DBeanFieldDate moDateApprobeDate;
    private sba.lib.gui.bean.DBeanFieldInteger moIntApprobeNumber;
    private sba.lib.gui.bean.DBeanFieldInteger moIntApprobeYear;
    private sba.lib.gui.bean.DBeanFieldInteger moIntNumberEnd;
    private sba.lib.gui.bean.DBeanFieldInteger moIntNumberStart;
    private sba.lib.gui.bean.DBeanFieldKey moKeyDpsCategory;
    private sba.lib.gui.bean.DBeanFieldKey moKeyDpsClass;
    private sba.lib.gui.bean.DBeanFieldKey moKeyDpsSeries;
    private sba.lib.gui.bean.DBeanFieldKey moKeyDpsType;
    private sba.lib.gui.bean.DBeanFieldKey moKeyXmlType;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {
        moFieldKeyGroup.initGroup();
        moFieldKeyGroup.addFieldKey(moKeyDpsCategory, DModConsts.TS_DPS_CT, DLibConsts.UNDEFINED, null);
        moFieldKeyGroup.addFieldKey(moKeyDpsClass, DModConsts.TS_DPS_CL, DLibConsts.UNDEFINED, null);
        moFieldKeyGroup.addFieldKey(moKeyDpsType, DModConsts.TS_DPS_TP, DLibConsts.UNDEFINED, null);
        moFieldKeyGroup.addFieldKey(moKeyDpsSeries, DModConsts.TU_SER, DLibConsts.UNDEFINED, null);
        moFieldKeyGroup.populateCatalogues();

        miClient.getSession().populateCatalogue(moKeyXmlType, DModConsts.TS_XML_TP, DLibConsts.UNDEFINED, null);
    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        int seriesId = DLibConsts.UNDEFINED;

        moRegistry = (DDbDpsSeriesNumber) registry;

        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        seriesId = moRegistry.getPkSeriesId();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(DLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        if (moRegistry.getParentDpsSeries() != null) {
            moKeyDpsCategory.setValue(moRegistry.getParentDpsSeries().getDpsCategoryKey());
            moKeyDpsClass.setValue(moRegistry.getParentDpsSeries().getDpsClassKey());
            moKeyDpsType.setValue(moRegistry.getParentDpsSeries().getDpsTypeKey());
            moKeyDpsSeries.setValue(new int[] { seriesId });
        }

        moIntNumberStart.setValue(moRegistry.getNumberStart());
        moIntNumberEnd.setValue(moRegistry.getNumberEnd_n());
        moIntApprobeYear.setValue(moRegistry.getApprobationYear());
        moIntApprobeNumber.setValue(moRegistry.getApprobationNumber());
        moDateApprobeDate.setValue(moRegistry.getApprobationDate_n());
        moKeyXmlType.setValue(new int[] { moRegistry.getFkXmlTypeId() });

        setFormEditable(true);

        if (moRegistry.getParentDpsSeries() == null) {
            moFieldKeyGroup.resetGroup();
        }

        if (!moRegistry.isRegistryNew()) {
            moKeyDpsCategory.setEditable(false);
            moKeyDpsClass.setEditable(false);
            moKeyDpsType.setEditable(false);
            moKeyDpsSeries.setEditable(false);
        }

        addAllListeners();
    }

    @Override
    public DDbDpsSeriesNumber getRegistry() throws Exception {
        DDbDpsSeriesNumber registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            DDbDpsSeries series = new DDbDpsSeries();

            series.read(miClient.getSession(), new int[] { moKeyDpsSeries.getValue()[0] });
            registry.setPkSeriesId(series.getPkSeriesId());
            registry.setParentDpsSeries(series);
        }

        registry.setNumberStart(moIntNumberStart.getValue());
        registry.setNumberEnd_n(moIntNumberEnd.getValue());
        registry.setApprobationYear(moIntApprobeYear.getValue());
        registry.setApprobationNumber(moIntApprobeNumber.getValue());
        registry.setApprobationDate_n(moDateApprobeDate.getValue());
        registry.setFkXmlTypeId(moKeyXmlType.getValue()[0]);

        return registry;
    }

    @Override
    public DGuiValidation validateForm() {
        DGuiValidation validation = moFields.validateFields();

        return validation;
    }
}
