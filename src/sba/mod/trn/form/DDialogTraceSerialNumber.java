/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DDialogTraceSerialNumber.java
 *
 * Created on 20/12/2011, 04:23:05 PM
 */

package sba.mod.trn.form;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JTextField;
import sba.lib.DLibConsts;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.grid.DGridColumnForm;
import sba.lib.grid.DGridConsts;
import sba.lib.grid.DGridPaneForm;
import sba.lib.grid.DGridRow;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanFormDialog;
import sba.mod.DModConsts;
import sba.mod.DModSysConsts;
import sba.mod.trn.db.DRowTraceSerialNumber;

/**
 *
 * @author Sergio Flores
 */
public class DDialogTraceSerialNumber extends DBeanFormDialog implements ActionListener {

    private DGridPaneForm moGridMoves;

    /** Creates new form DDialogTraceSerialNumber
     * @param client GUI client.
     */
    public DDialogTraceSerialNumber(DGuiClient client) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DModConsts.TX_TRC_SNR, DLibConsts.UNDEFINED, "Rastreo de número de serie");
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlSerialNumber = new javax.swing.JLabel();
        jtfSerialNumber = new javax.swing.JTextField();
        jbFind = new javax.swing.JButton();
        jpMoves = new javax.swing.JPanel();

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la búsqueda:"));
        jPanel7.setLayout(new java.awt.GridLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 1, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlSerialNumber.setText("Número serie:");
        jlSerialNumber.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel3.add(jlSerialNumber);

        jtfSerialNumber.setText("jTextField1");
        jtfSerialNumber.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel3.add(jtfSerialNumber);

        jbFind.setText("Buscar");
        jbFind.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel3.add(jbFind);

        jPanel1.add(jPanel3);

        jPanel7.add(jPanel1);

        getContentPane().add(jPanel7, java.awt.BorderLayout.NORTH);

        jpMoves.setBorder(javax.swing.BorderFactory.createTitledBorder("Movimientos de almacén:"));
        jpMoves.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jpMoves, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 960, 600);

        jbSave.setEnabled(false);
        jbSave.setText(DGuiConsts.TXT_BTN_OK);
        jbCancel.setText(DGuiConsts.TXT_BTN_CLOSE);

        moGridMoves = new DGridPaneForm(miClient, mnFormType, mnFormSubtype, msTitle) {
            @Override
            public void initGrid() {
                setRowButtonsEnabled(false);
            }

            @Override
            public void createGridColumns() {
                int col = 0;
                DGridColumnForm[] columns = new DGridColumnForm[14];

                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_INT_2B, "#");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_DATE, DGridConsts.COL_TITLE_DATE);
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_NAME_ITM_S, DGridConsts.COL_TITLE_NAME);
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_CODE_ITM, DGridConsts.COL_TITLE_CODE);
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT, "Movimiento", 125);
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_DEC_AMT, "Entrada");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_DEC_AMT, "Salida");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_CODE_UNT, "Unidad");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_REG_NUM, DGridConsts.COL_TITLE_NUM + " docto");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_CODE_CO, DGridConsts.COL_TITLE_TYPE + " docto");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_DATE, DGridConsts.COL_TITLE_DATE + " docto");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_CODE_CO, "Sucursal empresa");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_NAME_BPR_S, DGridConsts.COL_TITLE_NAME + " asociado negocios");
                columns[col++] = new DGridColumnForm(DGridConsts.COL_TYPE_TEXT_CODE_BPR, DGridConsts.COL_TITLE_CODE + " asociado negocios");

                for (col = 0; col < columns.length; col++) {
                    moModel.getGridColumns().add(columns[col]);
                }
            }
        };

        jpMoves.add(moGridMoves, BorderLayout.CENTER);

        mvFormGrids.add(moGridMoves);
    }

    @Override
    protected void windowActivated() {
        if (mbFirstActivation) {
            mbFirstActivation = false;
            jtfSerialNumber.requestFocus();
        }
    }

    private void actionFind() {
        int move = 1;
        String sql = "";
        String snr = DLibUtils.textTrim(jtfSerialNumber.getText());
        ResultSet resultSet = null;
        DRowTraceSerialNumber row = null;
        Vector<DGridRow> gridRows = new Vector<DGridRow>();

        if (snr.length() == 0) {
            miClient.showMsgBoxWarning(DGuiConsts.ERR_MSG_FIELD_REQ + "'" + DGuiUtils.getLabelName(jlSerialNumber.getText()) + "'.");
            jtfSerialNumber.requestFocus();
        }
        else {
            try {
                // Serial number trace stock moves:

                sql = "SELECT stk.id_yer, stk.id_itm, stk.id_unt, stk.id_bpr, stk.id_bra, stk.id_wah, stk.id_lot, " +
                        "stk.dt, stk.mov_in, stk.mov_out, mt.name, i.name, i.code, u.code, " +
                        "CONCAT(d.ser, IF(LENGTH(d.ser) = 0, '', '-'), d.num) AS f_dps_num, d.dt, d.fk_dps_ct, " +
                        "dt.code, cb.code, b.name, bcv.code, bcc.code " +
                        "FROM " + DModConsts.TablesMap.get(DModConsts.T_STK) + " AS stk " +
                        "INNER JOIN " + DModConsts.TablesMap.get(DModConsts.TS_IOG_TP) + " AS mt ON " +
                        "stk.fk_iog_ct = mt.id_iog_ct AND stk.fk_iog_cl = mt.id_iog_cl AND stk.fk_iog_tp = mt.id_iog_tp AND " +
                        "stk.b_del = 0 AND stk.snr = '" + snr + "' " +
                        "INNER JOIN " + DModConsts.TablesMap.get(DModConsts.IU_ITM) + " AS i ON " +
                        "stk.id_itm = i.id_itm " +
                        "INNER JOIN " + DModConsts.TablesMap.get(DModConsts.IU_UNT) + " AS u ON " +
                        "stk.id_unt = u.id_unt " +
                        "LEFT OUTER JOIN " + DModConsts.TablesMap.get(DModConsts.T_DPS) + " AS d ON " +
                        "stk.fk_dps_inv_dps_n = d.id_dps " +
                        "LEFT OUTER JOIN " + DModConsts.TablesMap.get(DModConsts.TS_DPS_TP) + " AS dt ON " +
                        "d.fk_dps_ct = dt.id_dps_ct AND d.fk_dps_cl = dt.id_dps_cl AND d.fk_dps_tp = dt.id_dps_tp " +
                        "LEFT OUTER JOIN " + DModConsts.TablesMap.get(DModConsts.BU_BRA) + " AS cb ON " +
                        "d.fk_own_bpr = cb.id_bpr AND d.fk_own_bra = cb.id_bra " +
                        "LEFT OUTER JOIN " + DModConsts.TablesMap.get(DModConsts.BU_BPR) + " AS b ON " +
                        "d.fk_bpr_bpr = b.id_bpr " +
                        "LEFT OUTER JOIN " + DModConsts.TablesMap.get(DModConsts.BU_BPR_CFG) + " AS bcv ON " +
                        "d.fk_bpr_bpr = bcv.id_bpr AND bcv.id_bpr_cl = " + DModSysConsts.BS_BPR_CL_VEN + " " +
                        "LEFT OUTER JOIN " + DModConsts.TablesMap.get(DModConsts.BU_BPR_CFG) + " AS bcc ON " +
                        "d.fk_bpr_bpr = bcc.id_bpr AND bcc.id_bpr_cl = " + DModSysConsts.BS_BPR_CL_CUS + " " +
                        "ORDER BY stk.dt, stk.id_yer, i.name, i.code, stk.id_itm, u.code, stk.id_unt, stk.id_bpr, stk.id_bra, stk.id_wah, stk.id_lot ";
                resultSet = miClient.getSession().getStatement().executeQuery(sql);
                while (resultSet.next()) {
                    row = new DRowTraceSerialNumber();

                    row.setMove(move++);
                    row.setDate(resultSet.getDate("stk.dt"));
                    row.setItemName(resultSet.getString("i.name"));
                    row.setItemCode(resultSet.getString("i.code"));
                    row.setIogMoveType(resultSet.getString("mt.name"));
                    row.setMoveIn(resultSet.getDouble("stk.mov_in"));
                    row.setMoveOut(resultSet.getDouble("stk.mov_out"));
                    row.setUnitCode(resultSet.getString("u.code"));
                    row.setDpsNumber(resultSet.getString("f_dps_num"));
                    row.setDpsType(resultSet.getString("dt.code"));
                    row.setDpsDate(resultSet.getDate("d.dt"));
                    row.setDpsCompanyBranchCode(resultSet.getString("cb.code"));
                    row.setDpsBizPartner(resultSet.getString("b.name"));
                    row.setDpsBizPartnerCode(resultSet.getInt("d.fk_dps_ct") == DModSysConsts.TS_DPS_CT_PUR ? resultSet.getString("bcv.code") : resultSet.getString("bcc.code"));

                    gridRows.add(row);
                }

                moGridMoves.populateGrid(gridRows);

                if (gridRows.isEmpty()) {
                    miClient.showMsgBoxWarning("No se encontró el número de serie '" + snr + "'.");
                }
            }
            catch (SQLException e) {
                DLibUtils.showException(this, e);
            }
            catch (Exception e) {
                DLibUtils.showException(this, e);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton jbFind;
    private javax.swing.JLabel jlSerialNumber;
    private javax.swing.JPanel jpMoves;
    private javax.swing.JTextField jtfSerialNumber;
    // End of variables declaration//GEN-END:variables

    /*
     * Public methods
     */

    /*
     * Overrided methods
     */

    @Override
    public void addAllListeners() {
        jbFind.addActionListener(this);
        jtfSerialNumber.addActionListener(this);
    }

    @Override
    public void removeAllListeners() {
        jbFind.removeActionListener(this);
        jtfSerialNumber.removeActionListener(this);
    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DGuiValidation validateForm() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setValue(final int type, final Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public Object getValue(final int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void resetForm() {
        mnFormResult = DLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();

        jtfSerialNumber.setText("");

        moGridMoves.clearGridRows();

        addAllListeners();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();

            if (button == jbFind) {
                actionFind();
            }
        }
        else if (e.getSource() instanceof JTextField) {
            JTextField textField = (JTextField) e.getSource();

            if (textField == jtfSerialNumber) {
                actionFind();
            }
        }
    }
}
