/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DDialogDpsDiscount.java
 *
 * Created on 7/11/2011, 07:51:51 PM
 */

package sba.mod.trn.form;

import cfd.ver3.DCfdVer3Consts;
import javax.swing.JOptionPane;
import sba.lib.DLibConsts;
import sba.lib.DLibUtils;
import sba.lib.db.DDbRegistry;
import sba.lib.gui.DGuiClient;
import sba.lib.gui.DGuiConsts;
import sba.lib.gui.DGuiUtils;
import sba.lib.gui.DGuiValidation;
import sba.lib.gui.bean.DBeanFormDialog;

/**
 *
 * @author Sergio Flores
 */
public class DDialogCfdiRelated extends DBeanFormDialog {
    
    public static final int UUID = 1;

    /** Creates new form DDialogCfdiRelated
     * @param client GUI client.
     */
    public DDialogCfdiRelated(DGuiClient client) {
        setFormSettings(client, DGuiConsts.BEAN_FORM_EDIT, DLibConsts.UNDEFINED, DLibConsts.UNDEFINED, "CFDI relacionados");
        initComponents();
        initComponentsCustom();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jlUuids = new javax.swing.JLabel();
        jspUuids = new javax.swing.JScrollPane();
        jtaUuids = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jlUuids1 = new javax.swing.JLabel();

        setTitle("Descuento del documento:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("CFDI relacionados:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 5, 0));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUuids.setText("UUID de CFDI relacionados:");
        jlUuids.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel1.add(jlUuids);

        jPanel2.add(jPanel1, java.awt.BorderLayout.NORTH);

        jspUuids.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jspUuids.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jtaUuids.setColumns(20);
        jtaUuids.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        jtaUuids.setRows(5);
        jtaUuids.setText("F5343B75-9A23-4E25-979A-03CA560FEE62");
        jtaUuids.setToolTipText("UUID");
        jspUuids.setViewportView(jtaUuids);

        jPanel2.add(jspUuids, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 5, 0));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUuids1.setForeground(java.awt.Color.gray);
        jlUuids1.setText("(Separar con salto de l√≠nea)");
        jlUuids1.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel3.add(jlUuids1);

        jPanel2.add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsCustom() {
        DGuiUtils.setWindowBounds(this, 320, 200);

        moFields.setFormButton(jbSave);

        jbSave.setText(DGuiConsts.TXT_BTN_OK);
    }

    @Override
    protected void windowActivated() {
        if (mbFirstActivation) {
            mbFirstActivation = false;
            jtaUuids.requestFocus();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jlUuids;
    private javax.swing.JLabel jlUuids1;
    private javax.swing.JScrollPane jspUuids;
    private javax.swing.JTextArea jtaUuids;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(DDbRegistry registry) throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public DGuiValidation validateForm() {
        DGuiValidation validation = moFields.validateFields();
        
        if (validation.isValid()) {
            if (jtaUuids.getText().isEmpty()) {
                if (miClient.showMsgBoxConfirm(DGuiConsts.MSG_CNF_FIELD_VAL_ + "'" + DGuiUtils.getLabelName(jlUuids) + "'" + DGuiConsts.MSG_CNF_FIELD_VAL_UNDEF) != JOptionPane.YES_OPTION) {
                    validation.setMessage(DGuiConsts.ERR_MSG_FIELD_REQ + "'" + DGuiUtils.getLabelName(jlUuids) + "'.");
                    validation.setComponent(jtaUuids);
                }
            }
            
            if (!jtaUuids.getText().isEmpty() && validation.isValid()) {
                String[] uuids = DLibUtils.textExplode(jtaUuids.getText(), "\n");
                UUID:
                for (int index1 = 0; index1 < uuids.length; index1++) {
                    if (uuids[index1].length() != DCfdVer3Consts.LEN_UUID) {
                        validation.setMessage(DGuiConsts.ERR_MSG_FIELD_REQ + "'" + DGuiUtils.getLabelName(jlUuids) + " #" + (index1 + 1) + "' de " + DCfdVer3Consts.LEN_UUID + " caracteres.");
                        validation.setComponent(jtaUuids);
                        break;
                    }
                    else {
                        for (int index2 = index1 + 1; index2 < uuids.length; index2++) {
                            if (uuids[index1].compareToIgnoreCase(uuids[index2]) == 0) {
                                validation.setMessage(DGuiConsts.ERR_MSG_FIELD_VAL_ + "'" + DGuiUtils.getLabelName(jlUuids) + " #" + (index1 + 1) + "' se repite en '" + DGuiUtils.getLabelName(jlUuids) + " #" + (index2 + 1) + "'.");
                                validation.setComponent(jtaUuids);
                                break UUID;
                            }
                        }
                    }
                }
            }
        }

        return validation;
    }

    @Override
    public void setValue(final int type, final Object value) {
        switch (type) {
            case UUID:
                jtaUuids.setText((String) value);
                jtaUuids.setCaretPosition(0);
                break;
            default:
                miClient.showMsgBoxError(DLibConsts.ERR_MSG_OPTION_UNKNOWN);
        }
    }

    @Override
    public Object getValue(final int type) {
        Object value = null;

        switch (type) {
            case UUID:
                value = jtaUuids.getText();
                break;
            default:
                miClient.showMsgBoxError(DLibConsts.ERR_MSG_OPTION_UNKNOWN);
        }

        return value;
    }
}
